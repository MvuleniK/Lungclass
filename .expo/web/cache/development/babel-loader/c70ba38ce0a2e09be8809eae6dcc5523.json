{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nimport { identity } from \"./Identity\";\nexport function complex(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var real = inputs.real,\n      imag = inputs.imag;\n  var complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n  var complex = backend.texData.get(complexInfo.dataId);\n  var realTensorInfo = identity({\n    inputs: {\n      x: real\n    },\n    backend: backend\n  });\n  var realData = backend.texData.get(realTensorInfo.dataId);\n  realData.complexParentRefCount++;\n  var imagTensorInfo = identity({\n    inputs: {\n      x: imag\n    },\n    backend: backend\n  });\n  var imagData = backend.texData.get(imagTensorInfo.dataId);\n  imagData.complexParentRefCount++;\n  complex.complexTensorInfos = {\n    real: realTensorInfo,\n    imag: imagTensorInfo\n  };\n  return complexInfo;\n}\nexport var complexConfig = {\n  kernelName: Complex,\n  backendName: 'webgl',\n  kernelFunc: complex\n};","map":{"version":3,"sources":["../../src/kernels/Complex.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,OAAR,QAA2E,uBAA3E;AAGA,SAAQ,QAAR;AAYA,OAAM,SAAU,OAAV,CACF,IADE,EACsD;EAC1D,IAAO,MAAP,GAA0B,IAA1B,CAAO,MAAP;EAAA,IAAe,OAAf,GAA0B,IAA1B,CAAe,OAAf;EACA,IAAO,IAAP,GAAqB,MAArB,CAAO,IAAP;EAAA,IAAa,IAAb,GAAqB,MAArB,CAAa,IAAb;EAEA,IAAM,WAAW,GAAG,OAAO,CAAC,cAAR,CAAuB,IAAI,CAAC,KAA5B,EAAmC,WAAnC,CAApB;EACA,IAAM,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,WAAW,CAAC,MAAhC,CAAhB;EAEA,IAAM,cAAc,GAAG,QAAQ,CAAC;IAAC,MAAM,EAAE;MAAC,CAAC,EAAE;IAAJ,CAAT;IAAoB,OAAO,EAAP;EAApB,CAAD,CAA/B;EACA,IAAM,QAAQ,GAAG,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,cAAc,CAAC,MAAnC,CAAjB;EACA,QAAQ,CAAC,qBAAT;EAEA,IAAM,cAAc,GAAG,QAAQ,CAAC;IAAC,MAAM,EAAE;MAAC,CAAC,EAAE;IAAJ,CAAT;IAAoB,OAAO,EAAP;EAApB,CAAD,CAA/B;EACA,IAAM,QAAQ,GAAG,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,cAAc,CAAC,MAAnC,CAAjB;EACA,QAAQ,CAAC,qBAAT;EAEA,OAAO,CAAC,kBAAR,GAA6B;IAAC,IAAI,EAAE,cAAP;IAAuB,IAAI,EAAE;EAA7B,CAA7B;EAEA,OAAO,WAAP;AACD;AAED,OAAO,IAAM,aAAa,GAAiB;EACzC,UAAU,EAAE,OAD6B;EAEzC,WAAW,EAAE,OAF4B;EAGzC,UAAU,EAAE;AAH6B,CAApC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\n/**\n * In WebGL data is stored in GPU textures which can't be efficiently copied, so\n * complex tensors share data with their real and imaginary components. Complex\n * tensors increment the `complexParentRefCount` properties of the underlying\n * data buckets to prevent them from being disposed, as the engine's disposal\n * logic does not account for data sharing by complex tensors.\n *\n * When a complex tensor is disposed, it will explicitly decrease the\n * `complexParentRefCount` properties of its underlying components.\n */\nexport function complex(args) {\n    const { inputs, backend } = args;\n    const { real, imag } = inputs;\n    const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n    const complex = backend.texData.get(complexInfo.dataId);\n    const realTensorInfo = identity({ inputs: { x: real }, backend });\n    const realData = backend.texData.get(realTensorInfo.dataId);\n    realData.complexParentRefCount++;\n    const imagTensorInfo = identity({ inputs: { x: imag }, backend });\n    const imagData = backend.texData.get(imagTensorInfo.dataId);\n    imagData.complexParentRefCount++;\n    complex.complexTensorInfos = { real: realTensorInfo, imag: imagTensorInfo };\n    return complexInfo;\n}\nexport const complexConfig = {\n    kernelName: Complex,\n    backendName: 'webgl',\n    kernelFunc: complex\n};\n//# sourceMappingURL=Complex.js.map"]},"metadata":{},"sourceType":"module"}