{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var json = [{\n  'tfOpName': 'ConcatV2',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'end': -1,\n    'name': 'tensors',\n    'type': 'tensors'\n  }, {\n    'start': -1,\n    'name': 'axis',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'N',\n    'name': 'n',\n    'type': 'number',\n    'defaultValue': 2\n  }]\n}, {\n  'tfOpName': 'Concat',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 1,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }, {\n    'start': 0,\n    'name': 'axis',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'N',\n    'name': 'n',\n    'type': 'number',\n    'defaultValue': 2\n  }]\n}, {\n  'tfOpName': 'GatherV2',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }],\n  'attrs': [{\n    'tfName': 'batch_dims',\n    'name': 'batchDims',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'Gather',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'validate_indices',\n    'name': 'validateIndices',\n    'type': 'bool',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Reverse',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'dims',\n    'type': 'bool[]'\n  }]\n}, {\n  'tfOpName': 'ReverseV2',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'Slice',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'begin',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'size',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'StridedSlice',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'begin',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'end',\n    'type': 'number[]'\n  }, {\n    'start': 3,\n    'name': 'strides',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'begin_mask',\n    'name': 'beginMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'end_mask',\n    'name': 'endMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'new_axis_mask',\n    'name': 'newAxisMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'ellipsis_mask',\n    'name': 'ellipsisMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'shrink_axis_mask',\n    'name': 'shrinkAxisMask',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'Pack',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'axis',\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'Unpack',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'axis',\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'num',\n    'name': 'num',\n    'type': 'number',\n    'defaultValue': 0,\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Tile',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'reps',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'Split',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'start': 1,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'num_split',\n    'name': 'numOrSizeSplits',\n    'type': 'number',\n    'defaultValue': 1\n  }]\n}, {\n  'tfOpName': 'SplitV',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'numOrSizeSplits',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'ScatterNd',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'indices',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'values',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'shape',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'GatherNd',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'SparseToDense',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'sparseIndices',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'outputShape',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'sparseValues',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'defaultValue',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'validate_indices',\n    'name': 'validateIndices',\n    'type': 'bool',\n    'defaultValue': false,\n    'notSupported': true\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/slice_join.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'ConcatV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'end': -1, 'name': 'tensors', 'type': 'tensors' },\n            { 'start': -1, 'name': 'axis', 'type': 'number' }\n        ],\n        'attrs': [{ 'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2 }]\n    },\n    {\n        'tfOpName': 'Concat',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 1, 'end': 0, 'name': 'tensors', 'type': 'tensors' },\n            { 'start': 0, 'name': 'axis', 'type': 'number' }\n        ],\n        'attrs': [{ 'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2 }]\n    },\n    {\n        'tfOpName': 'GatherV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' },\n            { 'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ],\n        'attrs': [{\n                'tfName': 'batch_dims',\n                'name': 'batchDims',\n                'type': 'number',\n                'defaultValue': 0\n            }]\n    },\n    {\n        'tfOpName': 'Gather',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'notSupported': true\n            }]\n    },\n    {\n        'tfOpName': 'Reverse',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'dims', 'type': 'bool[]' }\n        ]\n    },\n    {\n        'tfOpName': 'ReverseV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'Slice',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'begin', 'type': 'number[]' },\n            { 'start': 2, 'name': 'size', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'StridedSlice',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'begin', 'type': 'number[]' },\n            { 'start': 2, 'name': 'end', 'type': 'number[]' },\n            { 'start': 3, 'name': 'strides', 'type': 'number[]' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'begin_mask',\n                'name': 'beginMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'end_mask',\n                'name': 'endMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'new_axis_mask',\n                'name': 'newAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'ellipsis_mask',\n                'name': 'ellipsisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'shrink_axis_mask',\n                'name': 'shrinkAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pack',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ]\n    },\n    {\n        'tfOpName': 'Unpack',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0 }, {\n                'tfName': 'num',\n                'name': 'num',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tile',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'reps', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'Split',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'axis', 'type': 'number', 'defaultValue': 0 },\n            { 'start': 1, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'num_split',\n                'name': 'numOrSizeSplits',\n                'type': 'number',\n                'defaultValue': 1\n            }]\n    },\n    {\n        'tfOpName': 'SplitV',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'numOrSizeSplits', 'type': 'number[]' },\n            { 'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ]\n    },\n    {\n        'tfOpName': 'ScatterNd',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'indices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'values', 'type': 'tensor' },\n            { 'start': 2, 'name': 'shape', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'GatherNd',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' }\n        ]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'sparseIndices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'outputShape', 'type': 'number[]' },\n            { 'start': 2, 'name': 'sparseValues', 'type': 'tensor' },\n            { 'start': 3, 'name': 'defaultValue', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': false,\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=slice_join.js.map"]},"metadata":{},"sourceType":"module"}