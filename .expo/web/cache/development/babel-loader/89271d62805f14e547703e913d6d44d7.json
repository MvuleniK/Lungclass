{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport { abs } from \"./abs\";\nexport { acos } from \"./acos\";\nexport { acosh } from \"./acosh\";\nexport { add } from \"./add\";\nexport { addN } from \"./add_n\";\nexport { all } from \"./all\";\nexport { any } from \"./any\";\nexport { argMax } from \"./arg_max\";\nexport { argMin } from \"./arg_min\";\nexport { asin } from \"./asin\";\nexport { asinh } from \"./asinh\";\nexport { atan } from \"./atan\";\nexport { atan2 } from \"./atan2\";\nexport { atanh } from \"./atanh\";\nexport { avgPool } from \"./avg_pool\";\nexport { avgPool3d } from \"./avg_pool_3d\";\nexport { basicLSTMCell } from \"./basic_lstm_cell\";\nexport { batchToSpaceND } from \"./batch_to_space_nd\";\nexport { batchNorm } from \"./batchnorm\";\nexport { batchNorm2d } from \"./batchnorm2d\";\nexport { batchNorm3d } from \"./batchnorm3d\";\nexport { batchNorm4d } from \"./batchnorm4d\";\nexport { bincount } from \"./bincount\";\nexport { broadcastTo } from \"./broadcast_to\";\nexport { buffer } from \"./buffer\";\nexport { cast } from \"./cast\";\nexport { ceil } from \"./ceil\";\nexport { clipByValue } from \"./clip_by_value\";\nexport { clone } from \"./clone\";\nexport { complex } from \"./complex\";\nexport { concat } from \"./concat\";\nexport { concat1d } from \"./concat_1d\";\nexport { concat2d } from \"./concat_2d\";\nexport { concat3d } from \"./concat_3d\";\nexport { concat4d } from \"./concat_4d\";\nexport { conv1d } from \"./conv1d\";\nexport { conv2d } from \"./conv2d\";\nexport { conv2dTranspose } from \"./conv2d_transpose\";\nexport { conv3d } from \"./conv3d\";\nexport { conv3dTranspose } from \"./conv3d_transpose\";\nexport { cos } from \"./cos\";\nexport { cosh } from \"./cosh\";\nexport { cumsum } from \"./cumsum\";\nexport { denseBincount } from \"./dense_bincount\";\nexport { depthToSpace } from \"./depth_to_space\";\nexport { depthwiseConv2d } from \"./depthwise_conv2d\";\nexport { diag } from \"./diag\";\nexport { dilation2d } from \"./dilation2d\";\nexport { div } from \"./div\";\nexport { divNoNan } from \"./div_no_nan\";\nexport { dot } from \"./dot\";\nexport { elu } from \"./elu\";\nexport { equal } from \"./equal\";\nexport { erf } from \"./erf\";\nexport { exp } from \"./exp\";\nexport { expandDims } from \"./expand_dims\";\nexport { expm1 } from \"./expm1\";\nexport { eye } from \"./eye\";\nexport { fill } from \"./fill\";\nexport { floor } from \"./floor\";\nexport { floorDiv } from \"./floorDiv\";\nexport { gather } from \"./gather\";\nexport { greater } from \"./greater\";\nexport { greaterEqual } from \"./greater_equal\";\nexport { imag } from \"./imag\";\nexport { isFinite } from \"./is_finite\";\nexport { isInf } from \"./is_inf\";\nexport { isNaN } from \"./is_nan\";\nexport { leakyRelu } from \"./leaky_relu\";\nexport { less } from \"./less\";\nexport { lessEqual } from \"./less_equal\";\nexport { linspace } from \"./linspace\";\nexport { localResponseNormalization } from \"./local_response_normalization\";\nexport { log } from \"./log\";\nexport { log1p } from \"./log1p\";\nexport { logSigmoid } from \"./log_sigmoid\";\nexport { logSoftmax } from \"./log_softmax\";\nexport { logSumExp } from \"./log_sum_exp\";\nexport { logicalAnd } from \"./logical_and\";\nexport { logicalNot } from \"./logical_not\";\nexport { logicalOr } from \"./logical_or\";\nexport { logicalXor } from \"./logical_xor\";\nexport { matMul } from \"./mat_mul\";\nexport { max } from \"./max\";\nexport { maxPool } from \"./max_pool\";\nexport { maxPool3d } from \"./max_pool_3d\";\nexport { maxPoolWithArgmax } from \"./max_pool_with_argmax\";\nexport { maximum } from \"./maximum\";\nexport { mean } from \"./mean\";\nexport { min } from \"./min\";\nexport { minimum } from \"./minimum\";\nexport { mirrorPad } from \"./mirror_pad\";\nexport { mod } from \"./mod\";\nexport { moments } from \"./moments\";\nexport { mul } from \"./mul\";\nexport { multiRNNCell } from \"./multi_rnn_cell\";\nexport { multinomial } from \"./multinomial\";\nexport { neg } from \"./neg\";\nexport { notEqual } from \"./not_equal\";\nexport { oneHot } from \"./one_hot\";\nexport { ones } from \"./ones\";\nexport { onesLike } from \"./ones_like\";\nexport { outerProduct } from \"./outer_product\";\nexport { pad } from \"./pad\";\nexport { pad1d } from \"./pad1d\";\nexport { pad2d } from \"./pad2d\";\nexport { pad3d } from \"./pad3d\";\nexport { pad4d } from \"./pad4d\";\nexport { pool } from \"./pool\";\nexport { pow } from \"./pow\";\nexport { prelu } from \"./prelu\";\nexport { print } from \"./print\";\nexport { prod } from \"./prod\";\nexport { rand } from \"./rand\";\nexport { randomGamma } from \"./random_gamma\";\nexport { randomNormal } from \"./random_normal\";\nexport { randomUniform } from \"./random_uniform\";\nexport { range } from \"./range\";\nexport { real } from \"./real\";\nexport { reciprocal } from \"./reciprocal\";\nexport { relu } from \"./relu\";\nexport { relu6 } from \"./relu6\";\nexport { reshape } from \"./reshape\";\nexport { reverse } from \"./reverse\";\nexport { reverse1d } from \"./reverse_1d\";\nexport { reverse2d } from \"./reverse_2d\";\nexport { reverse3d } from \"./reverse_3d\";\nexport { reverse4d } from \"./reverse_4d\";\nexport { round } from \"./round\";\nexport { rsqrt } from \"./rsqrt\";\nexport { scalar } from \"./scalar\";\nexport { selu } from \"./selu\";\nexport { separableConv2d } from \"./separable_conv2d\";\nexport { setdiff1dAsync } from \"./setdiff1d_async\";\nexport { sigmoid } from \"./sigmoid\";\nexport { sign } from \"./sign\";\nexport { sin } from \"./sin\";\nexport { sinh } from \"./sinh\";\nexport { slice } from \"./slice\";\nexport { slice1d } from \"./slice1d\";\nexport { slice2d } from \"./slice2d\";\nexport { slice3d } from \"./slice3d\";\nexport { slice4d } from \"./slice4d\";\nexport { softmax } from \"./softmax\";\nexport { softplus } from \"./softplus\";\nexport { spaceToBatchND } from \"./space_to_batch_nd\";\nexport { fft } from \"./spectral/fft\";\nexport { ifft } from \"./spectral/ifft\";\nexport { irfft } from \"./spectral/irfft\";\nexport { rfft } from \"./spectral/rfft\";\nexport { split } from \"./split\";\nexport { sqrt } from \"./sqrt\";\nexport { square } from \"./square\";\nexport { squaredDifference } from \"./squared_difference\";\nexport { squeeze } from \"./squeeze\";\nexport { stack } from \"./stack\";\nexport { step } from \"./step\";\nexport { stridedSlice } from \"./strided_slice\";\nexport { sub } from \"./sub\";\nexport { sum } from \"./sum\";\nexport { tan } from \"./tan\";\nexport { tanh } from \"./tanh\";\nexport { tensor } from \"./tensor\";\nexport { tensor1d } from \"./tensor1d\";\nexport { tensor2d } from \"./tensor2d\";\nexport { tensor3d } from \"./tensor3d\";\nexport { tensor4d } from \"./tensor4d\";\nexport { tensor5d } from \"./tensor5d\";\nexport { tensor6d } from \"./tensor6d\";\nexport { tile } from \"./tile\";\nexport { topk } from \"./topk\";\nexport { truncatedNormal } from \"./truncated_normal\";\nexport { unique } from \"./unique\";\nexport { unsortedSegmentSum } from \"./unsorted_segment_sum\";\nexport { unstack } from \"./unstack\";\nexport { variable } from \"./variable\";\nexport { where } from \"./where\";\nexport { whereAsync } from \"./where_async\";\nexport { zeros } from \"./zeros\";\nexport { zerosLike } from \"./zeros_like\";\nexport * from \"./boolean_mask\";\nexport * from \"./compare\";\nexport * from \"./binary_ops\";\nexport * from \"./transpose\";\nexport * from \"./norm\";\nexport * from \"./moving_average\";\nexport * from \"./scatter_nd\";\nexport * from \"./sparse_to_dense\";\nexport * from \"./gather_nd\";\nexport * from \"./dropout\";\nexport * from \"./signal_ops_util\";\nexport * from \"./in_top_k\";\nexport { op, OP_SCOPE_SUFFIX } from \"./operation\";\nimport { rfft } from \"./spectral/rfft\";\nimport { fft } from \"./spectral/fft\";\nimport { ifft } from \"./spectral/ifft\";\nimport { irfft } from \"./spectral/irfft\";\nvar spectral = {\n  fft: fft,\n  ifft: ifft,\n  rfft: rfft,\n  irfft: irfft\n};\nimport * as fused from \"./fused_ops\";\nimport { hammingWindow } from \"./signal/hamming_window\";\nimport { hannWindow } from \"./signal/hann_window\";\nimport { frame } from \"./signal/frame\";\nimport { stft } from \"./signal/stft\";\nvar signal = {\n  hammingWindow: hammingWindow,\n  hannWindow: hannWindow,\n  frame: frame,\n  stft: stft\n};\nimport { cropAndResize } from \"./image/crop_and_resize\";\nimport { flipLeftRight } from \"./image/flip_left_right\";\nimport { rotateWithOffset } from \"./image/rotate_with_offset\";\nimport { nonMaxSuppression } from \"./image/non_max_suppression\";\nimport { nonMaxSuppressionAsync } from \"./image/non_max_suppression_async\";\nimport { nonMaxSuppressionWithScore } from \"./image/non_max_suppression_with_score\";\nimport { nonMaxSuppressionWithScoreAsync } from \"./image/non_max_suppression_with_score_async\";\nimport { nonMaxSuppressionPadded } from \"./image/non_max_suppression_padded\";\nimport { nonMaxSuppressionPaddedAsync } from \"./image/non_max_suppression_padded_async\";\nimport { resizeBilinear } from \"./image/resize_bilinear\";\nimport { resizeNearestNeighbor } from \"./image/resize_nearest_neighbor\";\nvar image = {\n  flipLeftRight: flipLeftRight,\n  resizeNearestNeighbor: resizeNearestNeighbor,\n  resizeBilinear: resizeBilinear,\n  rotateWithOffset: rotateWithOffset,\n  cropAndResize: cropAndResize,\n  nonMaxSuppression: nonMaxSuppression,\n  nonMaxSuppressionAsync: nonMaxSuppressionAsync,\n  nonMaxSuppressionWithScore: nonMaxSuppressionWithScore,\n  nonMaxSuppressionWithScoreAsync: nonMaxSuppressionWithScoreAsync,\n  nonMaxSuppressionPadded: nonMaxSuppressionPadded,\n  nonMaxSuppressionPaddedAsync: nonMaxSuppressionPaddedAsync\n};\nimport { bandPart } from \"./linalg/band_part\";\nimport { gramSchmidt } from \"./linalg/gram_schmidt\";\nimport { qr } from \"./linalg/qr\";\nvar linalg = {\n  bandPart: bandPart,\n  gramSchmidt: gramSchmidt,\n  qr: qr\n};\nimport { absoluteDifference } from \"./losses/absolute_difference\";\nimport { computeWeightedLoss } from \"./losses/compute_weighted_loss\";\nimport { cosineDistance } from \"./losses/cosine_distance\";\nimport { hingeLoss } from \"./losses/hinge_loss\";\nimport { huberLoss } from \"./losses/huber_loss\";\nimport { logLoss } from \"./losses/log_loss\";\nimport { meanSquaredError } from \"./losses/mean_squared_error\";\nimport { sigmoidCrossEntropy } from \"./losses/sigmoid_cross_entropy\";\nimport { softmaxCrossEntropy } from \"./losses/softmax_cross_entropy\";\nvar losses = {\n  absoluteDifference: absoluteDifference,\n  computeWeightedLoss: computeWeightedLoss,\n  cosineDistance: cosineDistance,\n  hingeLoss: hingeLoss,\n  huberLoss: huberLoss,\n  logLoss: logLoss,\n  meanSquaredError: meanSquaredError,\n  sigmoidCrossEntropy: sigmoidCrossEntropy,\n  softmaxCrossEntropy: softmaxCrossEntropy\n};\nexport { image, linalg, losses, spectral, fused, signal };","map":{"version":3,"sources":["../../src/ops/ops.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\nexport { abs } from './abs';\nexport { acos } from './acos';\nexport { acosh } from './acosh';\nexport { add } from './add';\nexport { addN } from './add_n';\nexport { all } from './all';\nexport { any } from './any';\nexport { argMax } from './arg_max';\nexport { argMin } from './arg_min';\nexport { asin } from './asin';\nexport { asinh } from './asinh';\nexport { atan } from './atan';\nexport { atan2 } from './atan2';\nexport { atanh } from './atanh';\nexport { avgPool } from './avg_pool';\nexport { avgPool3d } from './avg_pool_3d';\nexport { basicLSTMCell } from './basic_lstm_cell';\nexport { batchToSpaceND } from './batch_to_space_nd';\nexport { batchNorm } from './batchnorm';\nexport { batchNorm2d } from './batchnorm2d';\nexport { batchNorm3d } from './batchnorm3d';\nexport { batchNorm4d } from './batchnorm4d';\nexport { bincount } from './bincount';\nexport { broadcastTo } from './broadcast_to';\nexport { buffer } from './buffer';\nexport { cast } from './cast';\nexport { ceil } from './ceil';\nexport { clipByValue } from './clip_by_value';\nexport { clone } from './clone';\nexport { complex } from './complex';\nexport { concat } from './concat';\nexport { concat1d } from './concat_1d';\nexport { concat2d } from './concat_2d';\nexport { concat3d } from './concat_3d';\nexport { concat4d } from './concat_4d';\nexport { conv1d } from './conv1d';\nexport { conv2d } from './conv2d';\nexport { conv2dTranspose } from './conv2d_transpose';\nexport { conv3d } from './conv3d';\nexport { conv3dTranspose } from './conv3d_transpose';\nexport { cos } from './cos';\nexport { cosh } from './cosh';\nexport { cumsum } from './cumsum';\nexport { denseBincount } from './dense_bincount';\nexport { depthToSpace } from './depth_to_space';\nexport { depthwiseConv2d } from './depthwise_conv2d';\nexport { diag } from './diag';\nexport { dilation2d } from './dilation2d';\nexport { div } from './div';\nexport { divNoNan } from './div_no_nan';\nexport { dot } from './dot';\nexport { elu } from './elu';\nexport { equal } from './equal';\nexport { erf } from './erf';\nexport { exp } from './exp';\nexport { expandDims } from './expand_dims';\nexport { expm1 } from './expm1';\nexport { eye } from './eye';\nexport { fill } from './fill';\nexport { floor } from './floor';\nexport { floorDiv } from './floorDiv';\nexport { gather } from './gather';\nexport { greater } from './greater';\nexport { greaterEqual } from './greater_equal';\nexport { imag } from './imag';\nexport { isFinite } from './is_finite';\nexport { isInf } from './is_inf';\nexport { isNaN } from './is_nan';\nexport { leakyRelu } from './leaky_relu';\nexport { less } from './less';\nexport { lessEqual } from './less_equal';\nexport { linspace } from './linspace';\nexport { localResponseNormalization } from './local_response_normalization';\nexport { log } from './log';\nexport { log1p } from './log1p';\nexport { logSigmoid } from './log_sigmoid';\nexport { logSoftmax } from './log_softmax';\nexport { logSumExp } from './log_sum_exp';\nexport { logicalAnd } from './logical_and';\nexport { logicalNot } from './logical_not';\nexport { logicalOr } from './logical_or';\nexport { logicalXor } from './logical_xor';\nexport { matMul } from './mat_mul';\nexport { max } from './max';\nexport { maxPool } from './max_pool';\nexport { maxPool3d } from './max_pool_3d';\nexport { maxPoolWithArgmax } from './max_pool_with_argmax';\nexport { maximum } from './maximum';\nexport { mean } from './mean';\nexport { min } from './min';\nexport { minimum } from './minimum';\nexport { mirrorPad } from './mirror_pad';\nexport { mod } from './mod';\nexport { moments } from './moments';\nexport { mul } from './mul';\nexport { multiRNNCell } from './multi_rnn_cell';\nexport { multinomial } from './multinomial';\nexport { neg } from './neg';\nexport { notEqual } from './not_equal';\nexport { oneHot } from './one_hot';\nexport { ones } from './ones';\nexport { onesLike } from './ones_like';\nexport { outerProduct } from './outer_product';\nexport { pad } from './pad';\nexport { pad1d } from './pad1d';\nexport { pad2d } from './pad2d';\nexport { pad3d } from './pad3d';\nexport { pad4d } from './pad4d';\nexport { pool } from './pool';\nexport { pow } from './pow';\nexport { prelu } from './prelu';\nexport { print } from './print';\nexport { prod } from './prod';\nexport { rand } from './rand';\nexport { randomGamma } from './random_gamma';\nexport { randomNormal } from './random_normal';\nexport { randomUniform } from './random_uniform';\nexport { range } from './range';\nexport { real } from './real';\nexport { reciprocal } from './reciprocal';\nexport { relu } from './relu';\nexport { relu6 } from './relu6';\nexport { reshape } from './reshape';\nexport { reverse } from './reverse';\nexport { reverse1d } from './reverse_1d';\nexport { reverse2d } from './reverse_2d';\nexport { reverse3d } from './reverse_3d';\nexport { reverse4d } from './reverse_4d';\nexport { round } from './round';\nexport { rsqrt } from './rsqrt';\nexport { scalar } from './scalar';\nexport { selu } from './selu';\nexport { separableConv2d } from './separable_conv2d';\nexport { setdiff1dAsync } from './setdiff1d_async';\nexport { sigmoid } from './sigmoid';\nexport { sign } from './sign';\nexport { sin } from './sin';\nexport { sinh } from './sinh';\nexport { slice } from './slice';\nexport { slice1d } from './slice1d';\nexport { slice2d } from './slice2d';\nexport { slice3d } from './slice3d';\nexport { slice4d } from './slice4d';\nexport { softmax } from './softmax';\nexport { softplus } from './softplus';\nexport { spaceToBatchND } from './space_to_batch_nd';\nexport { fft } from './spectral/fft';\nexport { ifft } from './spectral/ifft';\nexport { irfft } from './spectral/irfft';\nexport { rfft } from './spectral/rfft';\nexport { split } from './split';\nexport { sqrt } from './sqrt';\nexport { square } from './square';\nexport { squaredDifference } from './squared_difference';\nexport { squeeze } from './squeeze';\nexport { stack } from './stack';\nexport { step } from './step';\nexport { stridedSlice } from './strided_slice';\nexport { sub } from './sub';\nexport { sum } from './sum';\nexport { tan } from './tan';\nexport { tanh } from './tanh';\nexport { tensor } from './tensor';\nexport { tensor1d } from './tensor1d';\nexport { tensor2d } from './tensor2d';\nexport { tensor3d } from './tensor3d';\nexport { tensor4d } from './tensor4d';\nexport { tensor5d } from './tensor5d';\nexport { tensor6d } from './tensor6d';\nexport { tile } from './tile';\nexport { topk } from './topk';\nexport { truncatedNormal } from './truncated_normal';\nexport { unique } from './unique';\nexport { unsortedSegmentSum } from './unsorted_segment_sum';\nexport { unstack } from './unstack';\nexport { variable } from './variable';\nexport { where } from './where';\nexport { whereAsync } from './where_async';\nexport { zeros } from './zeros';\nexport { zerosLike } from './zeros_like';\nexport * from './boolean_mask';\nexport * from './compare';\nexport * from './binary_ops';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\nexport { op, OP_SCOPE_SUFFIX } from './operation';\nimport { rfft } from './spectral/rfft';\nimport { fft } from './spectral/fft';\nimport { ifft } from './spectral/ifft';\nimport { irfft } from './spectral/irfft';\nconst spectral = {\n    fft,\n    ifft,\n    rfft,\n    irfft\n};\nimport * as fused from './fused_ops';\nimport { hammingWindow } from './signal/hamming_window';\nimport { hannWindow } from './signal/hann_window';\nimport { frame } from './signal/frame';\nimport { stft } from './signal/stft';\nconst signal = {\n    hammingWindow,\n    hannWindow,\n    frame,\n    stft,\n};\n// Image Ops namespace\nimport { cropAndResize } from './image/crop_and_resize';\nimport { flipLeftRight } from './image/flip_left_right';\nimport { rotateWithOffset } from './image/rotate_with_offset';\nimport { nonMaxSuppression } from './image/non_max_suppression';\nimport { nonMaxSuppressionAsync } from './image/non_max_suppression_async';\nimport { nonMaxSuppressionWithScore } from './image/non_max_suppression_with_score';\nimport { nonMaxSuppressionWithScoreAsync } from './image/non_max_suppression_with_score_async';\nimport { nonMaxSuppressionPadded } from './image/non_max_suppression_padded';\nimport { nonMaxSuppressionPaddedAsync } from './image/non_max_suppression_padded_async';\nimport { resizeBilinear } from './image/resize_bilinear';\nimport { resizeNearestNeighbor } from './image/resize_nearest_neighbor';\nconst image = {\n    flipLeftRight,\n    resizeNearestNeighbor,\n    resizeBilinear,\n    rotateWithOffset,\n    cropAndResize,\n    nonMaxSuppression,\n    nonMaxSuppressionAsync,\n    nonMaxSuppressionWithScore,\n    nonMaxSuppressionWithScoreAsync,\n    nonMaxSuppressionPadded,\n    nonMaxSuppressionPaddedAsync\n};\n// linalg namespace\nimport { bandPart } from './linalg/band_part';\nimport { gramSchmidt } from './linalg/gram_schmidt';\nimport { qr } from './linalg/qr';\nconst linalg = {\n    bandPart,\n    gramSchmidt,\n    qr\n};\n// losses namespace;\nimport { absoluteDifference } from './losses/absolute_difference';\nimport { computeWeightedLoss } from './losses/compute_weighted_loss';\nimport { cosineDistance } from './losses/cosine_distance';\nimport { hingeLoss } from './losses/hinge_loss';\nimport { huberLoss } from './losses/huber_loss';\nimport { logLoss } from './losses/log_loss';\nimport { meanSquaredError } from './losses/mean_squared_error';\nimport { sigmoidCrossEntropy } from './losses/sigmoid_cross_entropy';\nimport { softmaxCrossEntropy } from './losses/softmax_cross_entropy';\nconst losses = {\n    absoluteDifference,\n    computeWeightedLoss,\n    cosineDistance,\n    hingeLoss,\n    huberLoss,\n    logLoss,\n    meanSquaredError,\n    sigmoidCrossEntropy,\n    softmaxCrossEntropy\n};\n// Second level exports.\nexport { image, linalg, losses, spectral, fused, signal };\n//# sourceMappingURL=ops.js.map"]},"metadata":{},"sourceType":"module"}