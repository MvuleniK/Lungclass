{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ReshapePackedProgram } from \"../reshape_packed_gpu\";\nimport { getBatchDim, getRowsCols } from \"../webgl_util\";\nexport function packedReshape(input, afterShape, backend) {\n  var input3DShape = [getBatchDim(input.shape)].concat(_toConsumableArray(getRowsCols(input.shape)));\n  var input3D = {\n    dtype: input.dtype,\n    shape: input3DShape,\n    dataId: input.dataId\n  };\n  var afterShapeAs3D = [getBatchDim(afterShape)].concat(_toConsumableArray(getRowsCols(afterShape)));\n  var program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n  var preventEagerUnpackingOfOutput = true;\n  var output = backend.runWebGLProgram(program, [input3D], input.dtype, null, preventEagerUnpackingOfOutput);\n  return {\n    dataId: output.dataId,\n    shape: afterShape,\n    dtype: output.dtype\n  };\n}","map":{"version":3,"sources":["../../src/kernel_utils/reshape.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAKH,SAAQ,oBAAR;AACA,SAAQ,WAAR,EAAqB,WAArB;AAEA,OAAM,SAAU,aAAV,CACF,KADE,EACiB,UADjB,EAEF,OAFE,EAEuB;EAC3B,IAAM,YAAY,IACb,WAAW,CAAC,KAAK,CAAC,KAAP,CADE,4BAEV,WAAW,CAAC,KAAK,CAAC,KAAP,CAFD,EAAlB;EAGA,IAAM,OAAO,GAAe;IAC1B,KAAK,EAAE,KAAK,CAAC,KADa;IAE1B,KAAK,EAAE,YAFmB;IAG1B,MAAM,EAAE,KAAK,CAAC;EAHY,CAA5B;EAKA,IAAM,cAAc,IACf,WAAW,CAAC,UAAD,CADI,4BAEZ,WAAW,CAAC,UAAD,CAFC,EAApB;EAIA,IAAM,OAAO,GAAG,IAAI,oBAAJ,CAAyB,cAAzB,EAAyC,YAAzC,CAAhB;EACA,IAAM,6BAA6B,GAAG,IAAtC;EACA,IAAM,MAAM,GAAG,OAAO,CAAC,eAAR,CACX,OADW,EACF,CAAC,OAAD,CADE,EACS,KAAK,CAAC,KADf,EACsB,IADtB,EAEX,6BAFW,CAAf;EAGA,OAAO;IAAC,MAAM,EAAE,MAAM,CAAC,MAAhB;IAAwB,KAAK,EAAE,UAA/B;IAA2C,KAAK,EAAE,MAAM,CAAC;EAAzD,CAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ReshapePackedProgram } from '../reshape_packed_gpu';\nimport { getBatchDim, getRowsCols } from '../webgl_util';\nexport function packedReshape(input, afterShape, backend) {\n    const input3DShape = [getBatchDim(input.shape),\n        ...getRowsCols(input.shape)];\n    const input3D = {\n        dtype: input.dtype,\n        shape: input3DShape,\n        dataId: input.dataId\n    };\n    const afterShapeAs3D = [getBatchDim(afterShape),\n        ...getRowsCols(afterShape)];\n    const program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n    const preventEagerUnpackingOfOutput = true;\n    const output = backend.runWebGLProgram(program, [input3D], input.dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n    return { dataId: output.dataId, shape: afterShape, dtype: output.dtype };\n}\n//# sourceMappingURL=reshape.js.map"]},"metadata":{},"sourceType":"module"}