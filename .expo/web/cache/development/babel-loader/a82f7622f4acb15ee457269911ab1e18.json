{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function scatterImpl(indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices) {\n  var flattenShape = [outputSize / sliceSize, sliceSize];\n  var indicesData = indices.values;\n  var updatesData = updates.values;\n\n  if (outputSize === 0) {\n    return buffer(shape, updates.dtype);\n  }\n\n  var outBuf = buffer(flattenShape, updates.dtype);\n  outBuf.values.fill(defaultValue);\n\n  for (var i = 0; i < numUpdates; i++) {\n    var index = [];\n    var flattenIndex = 0;\n\n    for (var j = 0; j < sliceRank; j++) {\n      var dim = indicesData[i * sliceRank + j];\n      index.push(dim);\n      flattenIndex += dim * strides[j];\n    }\n\n    if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n      throw new Error(\"Invalid indices: \" + index + \" does not index into \" + shape);\n    }\n\n    for (var k = 0; k < sliceSize; k++) {\n      if (sumDupeIndices) {\n        outBuf.values[flattenIndex * sliceSize + k] += updatesData[i * sliceSize + k];\n      } else {\n        outBuf.values[flattenIndex * sliceSize + k] = updates.rank === 0 ? updatesData[0] : updatesData[i * sliceSize + k];\n      }\n    }\n  }\n\n  return outBuf;\n}","map":{"version":3,"sources":["../../src/kernels/Scatter_impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR,QAA+D,uBAA/D;AAEA,OAAM,SAAU,WAAV,CACF,OADE,EACwB,OADxB,EACkD,KADlD,EAEF,UAFE,EAEkB,SAFlB,EAEqC,UAFrC,EAGF,SAHE,EAGiB,OAHjB,EAGoC,YAHpC,EAIF,cAJE,EAIqB;EACzB,IAAM,YAAY,GAAG,CAAC,UAAU,GAAG,SAAd,EAAyB,SAAzB,CAArB;EAEA,IAAM,WAAW,GAAG,OAAO,CAAC,MAA5B;EACA,IAAM,WAAW,GAAG,OAAO,CAAC,MAA5B;;EAEA,IAAI,UAAU,KAAK,CAAnB,EAAsB;IACpB,OAAO,MAAM,CAAC,KAAD,EAAuB,OAAO,CAAC,KAA/B,CAAb;EACD;;EAED,IAAM,MAAM,GAAG,MAAM,CAAC,YAAD,EAAe,OAAO,CAAC,KAAvB,CAArB;EACC,MAAM,CAAC,MAAP,CAA6B,IAA7B,CAAkC,YAAlC;;EAED,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAApB,EAAgC,CAAC,EAAjC,EAAqC;IACnC,IAAM,KAAK,GAAG,EAAd;IACA,IAAI,YAAY,GAAG,CAAnB;;IACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;MAClC,IAAM,GAAG,GAAG,WAAW,CAAC,CAAC,GAAG,SAAJ,GAAgB,CAAjB,CAAvB;MACA,KAAK,CAAC,IAAN,CAAW,GAAX;MACA,YAAY,IAAI,GAAG,GAAG,OAAO,CAAC,CAAD,CAA7B;IACD;;IAED,IAAI,YAAY,GAAG,CAAf,IAAoB,YAAY,IAAI,UAAU,GAAG,SAArD,EAAgE;MAC9D,MAAM,IAAI,KAAJ,uBAA8B,KAA9B,6BAA2D,KAA3D,CAAN;IACD;;IAED,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;MAClC,IAAI,cAAJ,EAAoB;QAClB,MAAM,CAAC,MAAP,CAAc,YAAY,GAAG,SAAf,GAA2B,CAAzC,KACI,WAAW,CAAC,CAAC,GAAG,SAAJ,GAAgB,CAAjB,CADf;MAED,CAHD,MAGO;QACL,MAAM,CAAC,MAAP,CAAc,YAAY,GAAG,SAAf,GAA2B,CAAzC,IAA8C,OAAO,CAAC,IAAR,KAAiB,CAAjB,GAC1C,WAAW,CAAC,CAAD,CAD+B,GAE1C,WAAW,CAAC,CAAC,GAAG,SAAJ,GAAgB,CAAjB,CAFf;MAGD;IACF;EACF;;EAED,OAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function scatterImpl(indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices) {\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    const indicesData = indices.values;\n    const updatesData = updates.values;\n    if (outputSize === 0) {\n        return buffer(shape, updates.dtype);\n    }\n    const outBuf = buffer(flattenShape, updates.dtype);\n    outBuf.values.fill(defaultValue);\n    for (let i = 0; i < numUpdates; i++) {\n        const index = [];\n        let flattenIndex = 0;\n        for (let j = 0; j < sliceRank; j++) {\n            const dim = indicesData[i * sliceRank + j];\n            index.push(dim);\n            flattenIndex += dim * strides[j];\n        }\n        if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n            throw new Error(`Invalid indices: ${index} does not index into ${shape}`);\n        }\n        for (let k = 0; k < sliceSize; k++) {\n            if (sumDupeIndices) {\n                outBuf.values[flattenIndex * sliceSize + k] +=\n                    updatesData[i * sliceSize + k];\n            }\n            else {\n                outBuf.values[flattenIndex * sliceSize + k] = updates.rank === 0 ?\n                    updatesData[0] :\n                    updatesData[i * sliceSize + k];\n            }\n        }\n    }\n    return outBuf;\n}\n//# sourceMappingURL=Scatter_impl.js.map"]},"metadata":{},"sourceType":"module"}