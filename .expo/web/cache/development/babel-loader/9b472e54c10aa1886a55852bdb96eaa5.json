{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getTensor } from \"../executors/utils\";\nimport { getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam } from \"../operation_mapper\";\nexport var NodeValueImpl = function () {\n  function NodeValueImpl(node, tensorMap, context) {\n    var _this = this;\n\n    _classCallCheck(this, NodeValueImpl);\n\n    this.node = node;\n    this.tensorMap = tensorMap;\n    this.context = context;\n    this.inputs = [];\n    this.attrs = {};\n    this.inputs = node.inputNames.map(function (name) {\n      return _this.getInput(name);\n    });\n\n    if (node.rawAttrs != null) {\n      this.attrs = Object.keys(node.rawAttrs).reduce(function (attrs, key) {\n        attrs[key] = _this.getAttr(key);\n        return attrs;\n      }, {});\n    }\n  }\n\n  _createClass(NodeValueImpl, [{\n    key: \"getInput\",\n    value: function getInput(name) {\n      return getTensor(name, this.tensorMap, this.context);\n    }\n  }, {\n    key: \"getAttr\",\n    value: function getAttr(name, defaultValue) {\n      var value = this.node.rawAttrs[name];\n\n      if (value.tensor != null) {\n        return getTensor(name, this.tensorMap, this.context);\n      }\n\n      if (value.i != null || value.f != null) {\n        return getNumberParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.s != null) {\n        return getStringParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.b != null) {\n        return getBoolParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.shape != null) {\n        return getTensorShapeParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.type != null) {\n        return getDtypeParam(this.node.rawAttrs, name, defaultValue);\n      }\n\n      if (value.list != null) {\n        if (value.list.i != null || value.list.f != null) {\n          return getNumericArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.s != null) {\n          return getStringArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.shape != null) {\n          return getTensorShapeArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.b != null) {\n          return getBoolArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n\n        if (value.list.type != null) {\n          return getDtypeArrayParam(this.node.rawAttrs, name, defaultValue);\n        }\n      }\n\n      return defaultValue;\n    }\n  }]);\n\n  return NodeValueImpl;\n}();","map":{"version":3,"sources":["../../../src/operations/custom_op/node_value_impl.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getTensor } from '../executors/utils';\nimport { getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam } from '../operation_mapper';\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nexport class NodeValueImpl {\n    constructor(node, tensorMap, context) {\n        this.node = node;\n        this.tensorMap = tensorMap;\n        this.context = context;\n        this.inputs = [];\n        this.attrs = {};\n        this.inputs = node.inputNames.map(name => this.getInput(name));\n        if (node.rawAttrs != null) {\n            this.attrs = Object.keys(node.rawAttrs)\n                .reduce((attrs, key) => {\n                attrs[key] = this.getAttr(key);\n                return attrs;\n            }, {});\n        }\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getInput(name) {\n        return getTensor(name, this.tensorMap, this.context);\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getAttr(name, defaultValue) {\n        const value = this.node.rawAttrs[name];\n        if (value.tensor != null) {\n            return getTensor(name, this.tensorMap, this.context);\n        }\n        if (value.i != null || value.f != null) {\n            return getNumberParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.s != null) {\n            return getStringParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.b != null) {\n            return getBoolParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.shape != null) {\n            return getTensorShapeParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.type != null) {\n            return getDtypeParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.list != null) {\n            if (value.list.i != null || value.list.f != null) {\n                return getNumericArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.s != null) {\n                return getStringArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.shape != null) {\n                return getTensorShapeArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.b != null) {\n                return getBoolArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.type != null) {\n                return getDtypeArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n        }\n        return defaultValue;\n    }\n}\n//# sourceMappingURL=node_value_impl.js.map"]},"metadata":{},"sourceType":"module"}