{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport { imageDataFormat } from \"../backend/common\";\nimport { InputSpec, Layer } from \"../engine/topology\";\nimport { ValueError } from \"../errors\";\nimport { getExactlyOneShape, getExactlyOneTensor } from \"../utils/types_utils\";\nexport function temporalPadding(x, padding) {\n  return tidy(function () {\n    if (x.rank !== 3) {\n      throw new ValueError(\"temporalPadding expects input tensor to be 3-D, but received a \" + (x.rank + \"-D tensor.\"));\n    }\n\n    if (padding == null) {\n      padding = [1, 1];\n    }\n\n    if (padding.length !== 2) {\n      throw new ValueError(\"temporalPadding expects input padding pattern to be a length-2 \" + (\"array, but received a length-\" + padding.length + \" array.\"));\n    }\n\n    var pattern = [[0, 0], padding, [0, 0]];\n    return tfc.pad(x, pattern);\n  });\n}\nexport function spatial2dPadding(x, padding, dataFormat) {\n  return tidy(function () {\n    if (x.rank !== 4) {\n      throw new ValueError(\"temporalPadding expects input tensor to be 4-D, but received a \" + (x.rank + \"-D tensor.\"));\n    }\n\n    if (padding == null) {\n      padding = [[1, 1], [1, 1]];\n    }\n\n    if (padding.length !== 2 || padding[0].length !== 2 || padding[1].length !== 2) {\n      throw new ValueError('spatial2dPadding expects `padding` to be an Array of two Arrays, ' + 'each of which is an Array of two integers.');\n    }\n\n    if (dataFormat == null) {\n      dataFormat = imageDataFormat();\n    }\n\n    if (dataFormat !== 'channelsLast' && dataFormat !== 'channelsFirst') {\n      throw new ValueError(\"Unknown data format: \" + dataFormat + \". \" + \"Supported data formats are 'channelsLast' and 'channelsFirst.\");\n    }\n\n    var pattern;\n\n    if (dataFormat === 'channelsFirst') {\n      pattern = [[0, 0], [0, 0], padding[0], padding[1]];\n    } else {\n      pattern = [[0, 0], padding[0], padding[1], [0, 0]];\n    }\n\n    return tfc.pad(x, pattern);\n  });\n}\nexport var ZeroPadding2D = function (_Layer) {\n  _inherits(ZeroPadding2D, _Layer);\n\n  var _super = _createSuper(ZeroPadding2D);\n\n  function ZeroPadding2D(args) {\n    var _this;\n\n    _classCallCheck(this, ZeroPadding2D);\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this = _super.call(this, args);\n    _this.dataFormat = args.dataFormat == null ? imageDataFormat() : args.dataFormat;\n\n    if (args.padding == null) {\n      _this.padding = [[1, 1], [1, 1]];\n    } else if (typeof args.padding === 'number') {\n      _this.padding = [[args.padding, args.padding], [args.padding, args.padding]];\n    } else {\n      args.padding = args.padding;\n\n      if (args.padding.length !== 2) {\n        throw new ValueError(\"ZeroPadding2D expects padding to be a length-2 array, but \" + (\"received a length-\" + args.padding.length + \" array.\"));\n      }\n\n      var heightPadding;\n      var widthPadding;\n\n      if (typeof args.padding[0] === 'number') {\n        heightPadding = [args.padding[0], args.padding[0]];\n        widthPadding = [args.padding[1], args.padding[1]];\n      } else {\n        args.padding = args.padding;\n\n        if (args.padding[0].length !== 2) {\n          throw new ValueError(\"ZeroPadding2D expects height padding to be a length-2 array, \" + (\"but received a length-\" + args.padding[0].length + \" array.\"));\n        }\n\n        heightPadding = args.padding[0];\n\n        if (args.padding[1].length !== 2) {\n          throw new ValueError(\"ZeroPadding2D expects width padding to be a length-2 array, \" + (\"but received a length-\" + args.padding[1].length + \" array.\"));\n        }\n\n        widthPadding = args.padding[1];\n      }\n\n      _this.padding = [heightPadding, widthPadding];\n    }\n\n    _this.inputSpec = [new InputSpec({\n      ndim: 4\n    })];\n    return _this;\n  }\n\n  _createClass(ZeroPadding2D, [{\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var rows;\n      var cols;\n\n      if (this.dataFormat === 'channelsFirst') {\n        if (inputShape[2] != null && inputShape[2] >= 0) {\n          rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n        } else {\n          rows = null;\n        }\n\n        if (inputShape[3] != null && inputShape[3] >= 0) {\n          cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n        } else {\n          cols = null;\n        }\n\n        return [inputShape[0], inputShape[1], rows, cols];\n      } else {\n        if (inputShape[1] != null && inputShape[1] >= 0) {\n          rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n        } else {\n          rows = null;\n        }\n\n        if (inputShape[2] != null && inputShape[2] >= 0) {\n          cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n        } else {\n          cols = null;\n        }\n\n        return [inputShape[0], rows, cols, inputShape[3]];\n      }\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n\n      return tidy(function () {\n        return spatial2dPadding(getExactlyOneTensor(inputs), _this2.padding, _this2.dataFormat);\n      });\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        padding: this.padding,\n        dataFormat: this.dataFormat\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ZeroPadding2D.prototype), \"getConfig\", this).call(this);\n\n      _extends(config, baseConfig);\n\n      return config;\n    }\n  }]);\n\n  return ZeroPadding2D;\n}(Layer);\nZeroPadding2D.className = 'ZeroPadding2D';\nserialization.registerClass(ZeroPadding2D);","map":{"version":3,"sources":["../../src/layers/padding.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Padding Layers.\n */\n// Porting Note: In Python Keras, the padding layers are in convolutional.py,\n//   but we decided to put them in a separate file (padding.ts) for clarity.\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\nimport { imageDataFormat } from '../backend/common';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { ValueError } from '../errors';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\n/**\n * Pads the middle dimension of a 3D tensor.\n *\n * @param x Input `tf.Tensor` to be padded.\n * @param padding `Array` of 2 integers, how many zeros to add at the start and\n *   end of the middle dimension (i.e., dimension 1).\n * @return A padded 3D `tf.Tensor`.\n */\nexport function temporalPadding(x, padding) {\n    return tidy(() => {\n        if (x.rank !== 3) {\n            throw new ValueError(`temporalPadding expects input tensor to be 3-D, but received a ` +\n                `${x.rank}-D tensor.`);\n        }\n        if (padding == null) {\n            padding = [1, 1];\n        }\n        if (padding.length !== 2) {\n            throw new ValueError(`temporalPadding expects input padding pattern to be a length-2 ` +\n                `array, but received a length-${padding.length} array.`);\n        }\n        const pattern = [[0, 0], padding, [0, 0]];\n        return tfc.pad(x, pattern);\n    });\n}\n/**\n * Pads the 2nd and 3rd dimensions of a 4D tensor.\n *\n * @param x Input `tf.Tensor` to be padded.\n * @param padding `Array` of two `Array`s, each of which is an `Array` of two\n *   integers. The amount of padding at the beginning and end of the 2nd and 3rd\n *   dimensions, respectively.\n * @param dataFormat 'channelsLast' (default) or 'channelsFirst'.\n * @return Padded 4D `tf.Tensor`.\n */\nexport function spatial2dPadding(x, padding, dataFormat) {\n    return tidy(() => {\n        if (x.rank !== 4) {\n            throw new ValueError(`temporalPadding expects input tensor to be 4-D, but received a ` +\n                `${x.rank}-D tensor.`);\n        }\n        if (padding == null) {\n            padding = [[1, 1], [1, 1]];\n        }\n        if (padding.length !== 2 || padding[0].length !== 2 ||\n            padding[1].length !== 2) {\n            throw new ValueError('spatial2dPadding expects `padding` to be an Array of two Arrays, ' +\n                'each of which is an Array of two integers.');\n        }\n        if (dataFormat == null) {\n            dataFormat = imageDataFormat();\n        }\n        if (dataFormat !== 'channelsLast' && dataFormat !== 'channelsFirst') {\n            throw new ValueError(`Unknown data format: ${dataFormat}. ` +\n                `Supported data formats are 'channelsLast' and 'channelsFirst.`);\n        }\n        let pattern;\n        if (dataFormat === 'channelsFirst') {\n            pattern = [[0, 0], [0, 0], padding[0], padding[1]];\n        }\n        else {\n            pattern = [[0, 0], padding[0], padding[1], [0, 0]];\n        }\n        return tfc.pad(x, pattern);\n    });\n}\nexport class ZeroPadding2D extends Layer {\n    constructor(args) {\n        if (args == null) {\n            args = {};\n        }\n        super(args);\n        this.dataFormat =\n            args.dataFormat == null ? imageDataFormat() : args.dataFormat;\n        // TODO(cais): Maybe refactor the following logic surrounding `padding`\n        //   into a helper method.\n        if (args.padding == null) {\n            this.padding = [[1, 1], [1, 1]];\n        }\n        else if (typeof args.padding === 'number') {\n            this.padding =\n                [[args.padding, args.padding], [args.padding, args.padding]];\n        }\n        else {\n            args.padding = args.padding;\n            if (args.padding.length !== 2) {\n                throw new ValueError(`ZeroPadding2D expects padding to be a length-2 array, but ` +\n                    `received a length-${args.padding.length} array.`);\n            }\n            let heightPadding;\n            let widthPadding;\n            if (typeof args.padding[0] === 'number') {\n                heightPadding = [args.padding[0], args.padding[0]];\n                widthPadding = [args.padding[1], args.padding[1]];\n            }\n            else {\n                args.padding = args.padding;\n                if (args.padding[0].length !== 2) {\n                    throw new ValueError(`ZeroPadding2D expects height padding to be a length-2 array, ` +\n                        `but received a length-${args.padding[0].length} array.`);\n                }\n                heightPadding = args.padding[0];\n                if (args.padding[1].length !== 2) {\n                    throw new ValueError(`ZeroPadding2D expects width padding to be a length-2 array, ` +\n                        `but received a length-${args.padding[1].length} array.`);\n                }\n                widthPadding = args.padding[1];\n            }\n            this.padding = [heightPadding, widthPadding];\n        }\n        this.inputSpec = [new InputSpec({ ndim: 4 })];\n    }\n    computeOutputShape(inputShape) {\n        inputShape = getExactlyOneShape(inputShape);\n        let rows;\n        let cols;\n        if (this.dataFormat === 'channelsFirst') {\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n            }\n            else {\n                rows = null;\n            }\n            if (inputShape[3] != null && inputShape[3] >= 0) {\n                cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n            }\n            else {\n                cols = null;\n            }\n            return [inputShape[0], inputShape[1], rows, cols];\n        }\n        else {\n            if (inputShape[1] != null && inputShape[1] >= 0) {\n                rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n            }\n            else {\n                rows = null;\n            }\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n            }\n            else {\n                cols = null;\n            }\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    }\n    call(inputs, kwargs) {\n        return tidy(() => spatial2dPadding(getExactlyOneTensor(inputs), this.padding, this.dataFormat));\n    }\n    getConfig() {\n        const config = {\n            padding: this.padding,\n            dataFormat: this.dataFormat,\n        };\n        const baseConfig = super.getConfig();\n        Object.assign(config, baseConfig);\n        return config;\n    }\n}\n/** @nocollapse */\nZeroPadding2D.className = 'ZeroPadding2D';\nserialization.registerClass(ZeroPadding2D);\n//# sourceMappingURL=padding.js.map"]},"metadata":{},"sourceType":"module"}