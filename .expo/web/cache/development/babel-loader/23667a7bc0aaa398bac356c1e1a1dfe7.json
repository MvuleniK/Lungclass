{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from \"../kernel_names\";\nimport { matMul } from \"../ops/mat_mul\";\nexport var batchMatMulGradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var transposeA = attrs.transposeA,\n        transposeB = attrs.transposeB;\n\n    if (!transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, true, false);\n        }\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, false);\n        },\n        b: function b() {\n          return matMul(dy, a, true, false);\n        }\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(b, dy, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, false, false);\n        }\n      };\n    } else {\n      return {\n        a: function a() {\n          return matMul(b, dy, true, true);\n        },\n        b: function b() {\n          return matMul(dy, a, true, true);\n        }\n      };\n    }\n  }\n};","map":{"version":3,"sources":["../../src/gradients/BatchMatMul_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,WAAR;AAEA,SAAQ,MAAR;AAGA,OAAO,IAAM,qBAAqB,GAAe;EAC/C,UAAU,EAAE,WADmC;EAE/C,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,CAFiC;EAG/C,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;IAC7D,4BAAe,KAAf;IAAA,IAAO,CAAP;IAAA,IAAU,CAAV;;IAEA,IAAO,UAAP,GAAiC,KAAjC,CAAO,UAAP;IAAA,IAAmB,UAAnB,GAAiC,KAAjC,CAAmB,UAAnB;;IAEA,IAAI,CAAC,UAAD,IAAe,CAAC,UAApB,EAAgC;MAC9B,OAAO;QACL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,KAAR,EAAe,IAAf,CAAZ;QAAA,CADE;QAEL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,IAAR,EAAc,KAAd,CAAZ;QAAA;MAFE,CAAP;IAID,CALD,MAKO,IAAI,CAAC,UAAD,IAAe,UAAnB,EAA+B;MACpC,OAAO;QACL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,KAAR,EAAe,KAAf,CAAZ;QAAA,CADE;QAEL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,IAAR,EAAc,KAAd,CAAZ;QAAA;MAFE,CAAP;IAID,CALM,MAKA,IAAI,UAAU,IAAI,CAAC,UAAnB,EAA+B;MACpC,OAAO;QACL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,KAAR,EAAe,IAAf,CAAZ;QAAA,CADE;QAEL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,KAAR,EAAe,KAAf,CAAZ;QAAA;MAFE,CAAP;IAID,CALM,MAKA;MACL,OAAO;QACL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,IAAR,EAAc,IAAd,CAAZ;QAAA,CADE;QAEL,CAAC,EAAE;UAAA,OAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,IAAR,EAAc,IAAd,CAAZ;QAAA;MAFE,CAAP;IAID;EACF;AA7B8C,CAA1C","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '../kernel_names';\nimport { matMul } from '../ops/mat_mul';\nexport const batchMatMulGradConfig = {\n    kernelName: BatchMatMul,\n    inputsToSave: ['a', 'b'],\n    gradFunc: (dy, saved, attrs) => {\n        const [a, b] = saved;\n        const { transposeA, transposeB } = attrs;\n        if (!transposeA && !transposeB) {\n            return {\n                a: () => matMul(dy, b, false, true),\n                b: () => matMul(a, dy, true, false)\n            };\n        }\n        else if (!transposeA && transposeB) {\n            return {\n                a: () => matMul(dy, b, false, false),\n                b: () => matMul(dy, a, true, false)\n            };\n        }\n        else if (transposeA && !transposeB) {\n            return {\n                a: () => matMul(b, dy, false, true),\n                b: () => matMul(a, dy, false, false)\n            };\n        }\n        else {\n            return {\n                a: () => matMul(b, dy, true, true),\n                b: () => matMul(dy, a, true, true)\n            };\n        }\n    }\n};\n//# sourceMappingURL=BatchMatMul_grad.js.map"]},"metadata":{},"sourceType":"module"}