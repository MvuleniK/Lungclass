{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput } from '@tensorflow/tfjs-core';\nimport { Conv2DDerInputProgram } from \"../conv_backprop_gpu\";\nexport function conv2DBackpropInput(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      filter = inputs.filter;\n  var inputShape = attrs.inputShape,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1, pad, dimRoundingMode, false, $dataFormat);\n  var program = new Conv2DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport var conv2DBackpropInputConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropInput\n};","map":{"version":3,"sources":["../../src/kernels/Conv2DBackpropInput.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,mBAAtB,QAA+H,uBAA/H;AAGA,SAAQ,qBAAR;AAEA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAIL;EACC,IAAO,MAAP,GAAiC,IAAjC,CAAO,MAAP;EAAA,IAAe,OAAf,GAAiC,IAAjC,CAAe,OAAf;EAAA,IAAwB,KAAxB,GAAiC,IAAjC,CAAwB,KAAxB;EACA,IAAO,EAAP,GAAqB,MAArB,CAAO,EAAP;EAAA,IAAW,MAAX,GAAqB,MAArB,CAAW,MAAX;EACA,IAAO,UAAP,GAAgE,KAAhE,CAAO,UAAP;EAAA,IAAmB,OAAnB,GAAgE,KAAhE,CAAmB,OAAnB;EAAA,IAA4B,GAA5B,GAAgE,KAAhE,CAA4B,GAA5B;EAAA,IAAiC,UAAjC,GAAgE,KAAhE,CAAiC,UAAjC;EAAA,IAA6C,eAA7C,GAAgE,KAAhE,CAA6C,eAA7C;EAEA,IAAM,WAAW,GAAG,YAAY,CAAC,uBAAb,CAAqC,UAArC,CAApB;EACA,IAAM,QAAQ,GAAG,YAAY,CAAC,iBAAb,CACb,UADa,EACD,MAAM,CAAC,KADN,EACiD,OADjD,EAEb,CAFa,EAEM,GAFN,EAEW,eAFX,EAE4B,KAF5B,EAEmC,WAFnC,CAAjB;EAIA,IAAM,OAAO,GAAG,IAAI,qBAAJ,CAA0B,QAA1B,CAAhB;EACA,OAAO,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,CAAC,EAAD,EAAK,MAAL,CAAjC,EAA+C,SAA/C,CAAP;AACD;AAED,OAAO,IAAM,yBAAyB,GAAiB;EACrD,UAAU,EAAE,mBADyC;EAErD,WAAW,EAAE,OAFwC;EAGrD,UAAU,EAAE;AAHyC,CAAhD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput } from '@tensorflow/tfjs-core';\nimport { Conv2DDerInputProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { inputShape, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n    const program = new Conv2DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport const conv2DBackpropInputConfig = {\n    kernelName: Conv2DBackpropInput,\n    backendName: 'webgl',\n    kernelFunc: conv2DBackpropInput,\n};\n//# sourceMappingURL=Conv2DBackpropInput.js.map"]},"metadata":{},"sourceType":"module"}