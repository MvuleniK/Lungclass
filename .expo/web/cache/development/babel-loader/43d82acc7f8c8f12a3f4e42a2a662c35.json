{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from \"../cpu_util\";\nimport { topKImpl } from \"./TopK_impl\";\nexport function topK(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var k = attrs.k,\n      sorted = attrs.sorted;\n  assertNotComplex(x, 'topk');\n  var xVals = backend.data.get(x.dataId).values;\n\n  var _topKImpl = topKImpl(xVals, x.shape, x.dtype, k, sorted),\n      _topKImpl2 = _slicedToArray(_topKImpl, 2),\n      allTopKVals = _topKImpl2[0],\n      allTopKIndices = _topKImpl2[1];\n\n  return [backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values), backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)];\n}\nexport var topKConfig = {\n  kernelName: TopK,\n  backendName: 'cpu',\n  kernelFunc: topK\n};","map":{"version":3,"sources":["../../src/kernels/TopK.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAA+D,IAA/D,QAA6G,uBAA7G;AAGA,SAAQ,gBAAR;AACA,SAAQ,QAAR;AAEA,OAAM,SAAU,IAAV,CACF,IADE,EACmE;EAEvE,IAAO,MAAP,GAAiC,IAAjC,CAAO,MAAP;EAAA,IAAe,OAAf,GAAiC,IAAjC,CAAe,OAAf;EAAA,IAAwB,KAAxB,GAAiC,IAAjC,CAAwB,KAAxB;EACA,IAAO,CAAP,GAAY,MAAZ,CAAO,CAAP;EACA,IAAO,CAAP,GAAoB,KAApB,CAAO,CAAP;EAAA,IAAU,MAAV,GAAoB,KAApB,CAAU,MAAV;EAEA,gBAAgB,CAAC,CAAD,EAAI,MAAJ,CAAhB;EAEA,IAAM,KAAK,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,CAAC,CAAC,MAAnB,EAA2B,MAAzC;;EACA,gBACI,QAAQ,CAAC,KAAD,EAAQ,CAAC,CAAC,KAAV,EAAiB,CAAC,CAAC,KAAnB,EAA6C,CAA7C,EAAgD,MAAhD,CADZ;EAAA;EAAA,IAAO,WAAP;EAAA,IAAoB,cAApB;;EAGA,OAAO,CACL,OAAO,CAAC,cAAR,CACI,WAAW,CAAC,KADhB,EACuB,WAAW,CAAC,KADnC,EAC0C,WAAW,CAAC,MADtD,CADK,EAGL,OAAO,CAAC,cAAR,CACI,cAAc,CAAC,KADnB,EAC0B,cAAc,CAAC,KADzC,EACgD,cAAc,CAAC,MAD/D,CAHK,CAAP;AAMD;AAED,OAAO,IAAM,UAAU,GAAiB;EACtC,UAAU,EAAE,IAD0B;EAEtC,WAAW,EAAE,KAFyB;EAGtC,UAAU,EAAE;AAH0B,CAAjC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { topKImpl } from './TopK_impl';\nexport function topK(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { k, sorted } = attrs;\n    assertNotComplex(x, 'topk');\n    const xVals = backend.data.get(x.dataId).values;\n    const [allTopKVals, allTopKIndices] = topKImpl(xVals, x.shape, x.dtype, k, sorted);\n    return [\n        backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values),\n        backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)\n    ];\n}\nexport const topKConfig = {\n    kernelName: TopK,\n    backendName: 'cpu',\n    kernelFunc: topK\n};\n//# sourceMappingURL=TopK.js.map"]},"metadata":{},"sourceType":"module"}