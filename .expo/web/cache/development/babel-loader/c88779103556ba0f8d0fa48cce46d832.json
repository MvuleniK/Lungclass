{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from \"./shader_compiler\";\nexport var StridedSliceProgram = _createClass(function StridedSliceProgram(begin, strides, size) {\n  _classCallCheck(this, StridedSliceProgram);\n\n  this.variableNames = ['x'];\n  this.outputShape = size;\n  var rank = size.length;\n  var inputDtype = getCoordsDataType(size.length);\n  var dtype = getCoordsDataType(size.length);\n  var newCoords = '';\n\n  if (rank === 1) {\n    newCoords = 'coords * strides + begin';\n  } else {\n    var outputAxis = 0;\n    newCoords = size.map(function (_, i) {\n      outputAxis++;\n      return size.length === 1 ? \"coords * strides[\" + i + \"] + begin[\" + i + \"]\" : \"coords[\" + (outputAxis - 1) + \"] * strides[\" + i + \"] + begin[\" + i + \"]\";\n    }).join(',');\n  }\n\n  this.userCode = \"\\n      \" + inputDtype + \" begin = \" + inputDtype + \"(\" + begin + \");\\n      \" + inputDtype + \" strides = \" + inputDtype + \"(\" + strides + \");\\n\\n      void main() {\\n        \" + dtype + \" coords = getOutputCoords();\\n        setOutput(getX(\" + newCoords + \"));\\n      }\\n    \";\n});","map":{"version":3,"sources":["../src/strided_slice_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,iBAAR;AAEA,WAAa,mBAAb,gBAKE,6BAAY,KAAZ,EAA6B,OAA7B,EAAgD,IAAhD,EAA8D;EAAA;;EAJ9D,KAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;EAKE,KAAK,WAAL,GAAmB,IAAnB;EACA,IAAM,IAAI,GAAG,IAAI,CAAC,MAAlB;EACA,IAAM,UAAU,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAN,CAApC;EACA,IAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAN,CAA/B;EAEA,IAAI,SAAS,GAAG,EAAhB;;EACA,IAAI,IAAI,KAAK,CAAb,EAAgB;IACd,SAAS,GAAG,0BAAZ;EACD,CAFD,MAEO;IACL,IAAI,UAAU,GAAG,CAAjB;IACA,SAAS,GACL,IAAI,CAAC,GAAL,CAAS,UAAC,CAAD,EAAI,CAAJ,EAAS;MACZ,UAAU;MACV,OAAO,IAAI,CAAC,MAAL,KAAgB,CAAhB,yBACiB,CADjB,kBAC+B,CAD/B,sBAEO,UAAU,GAAG,CAFpB,qBAEoC,CAFpC,kBAEkD,CAFlD,MAAP;IAGD,CALL,EAMK,IANL,CAMU,GANV,CADJ;EAQD;;EAED,KAAK,QAAL,gBACI,UADJ,iBAC0B,UAD1B,SACwC,KADxC,kBAEI,UAFJ,mBAE4B,UAF5B,SAE0C,OAF1C,2CAKM,KALN,6DAMqB,SANrB;AASD,CAnCH","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class StridedSliceProgram {\n    constructor(begin, strides, size) {\n        this.variableNames = ['x'];\n        this.outputShape = size;\n        const rank = size.length;\n        const inputDtype = getCoordsDataType(size.length);\n        const dtype = getCoordsDataType(size.length);\n        let newCoords = '';\n        if (rank === 1) {\n            newCoords = 'coords * strides + begin';\n        }\n        else {\n            let outputAxis = 0;\n            newCoords =\n                size.map((_, i) => {\n                    outputAxis++;\n                    return size.length === 1 ?\n                        `coords * strides[${i}] + begin[${i}]` :\n                        `coords[${outputAxis - 1}] * strides[${i}] + begin[${i}]`;\n                })\n                    .join(',');\n        }\n        this.userCode = `\n      ${inputDtype} begin = ${inputDtype}(${begin});\n      ${inputDtype} strides = ${inputDtype}(${strides});\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        setOutput(getX(${newCoords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=strided_slice_gpu.js.map"]},"metadata":{},"sourceType":"module"}