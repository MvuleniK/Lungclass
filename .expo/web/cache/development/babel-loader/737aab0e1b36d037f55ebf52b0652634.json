{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool2DBackpropProgram } from \"../max_pool_backprop_gpu\";\nimport { Pool2DProgram } from \"../pool_gpu\";\nimport { assertNotComplex } from \"../webgl_util\";\nexport function maxPoolGrad(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var dy = inputs.dy,\n      input = inputs.input,\n      output = inputs.output;\n  var x = input;\n  assertNotComplex([input, output], 'maxPoolGrad');\n  var filterSize = attrs.filterSize,\n      strides = attrs.strides,\n      pad = attrs.pad,\n      dimRoundingMode = attrs.dimRoundingMode;\n  var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1, pad, dimRoundingMode);\n  var getPositions = true;\n  var maxPoolPositionsProgram = new Pool2DProgram(convInfo, 'max', getPositions);\n  var maxPoolPositions = backend.runWebGLProgram(maxPoolPositionsProgram, [x], x.dtype);\n  var maxPoolBackPropProgram = new MaxPool2DBackpropProgram(convInfo);\n  var result = backend.runWebGLProgram(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n  backend.disposeIntermediateTensorInfo(maxPoolPositions);\n  return result;\n}\nexport var maxPoolGradConfig = {\n  kernelName: MaxPoolGrad,\n  backendName: 'webgl',\n  kernelFunc: maxPoolGrad\n};","map":{"version":3,"sources":["../../src/kernels/MaxPoolGrad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,YAAR,EAAgD,WAAhD,QAAmH,uBAAnH;AAGA,SAAQ,wBAAR;AACA,SAAQ,aAAR;AACA,SAAQ,gBAAR;AAEA,OAAM,SAAU,WAAV,CAAsB,IAAtB,EAIL;EACC,IAAO,MAAP,GAAiC,IAAjC,CAAO,MAAP;EAAA,IAAe,OAAf,GAAiC,IAAjC,CAAe,OAAf;EAAA,IAAwB,KAAxB,GAAiC,IAAjC,CAAwB,KAAxB;EACA,IAAO,EAAP,GAA4B,MAA5B,CAAO,EAAP;EAAA,IAAW,KAAX,GAA4B,MAA5B,CAAW,KAAX;EAAA,IAAkB,MAAlB,GAA4B,MAA5B,CAAkB,MAAlB;EACA,IAAM,CAAC,GAAG,KAAV;EACA,gBAAgB,CAAC,CAAC,KAAD,EAAQ,MAAR,CAAD,EAAkB,aAAlB,CAAhB;EACA,IAAO,UAAP,GAAoD,KAApD,CAAO,UAAP;EAAA,IAAmB,OAAnB,GAAoD,KAApD,CAAmB,OAAnB;EAAA,IAA4B,GAA5B,GAAoD,KAApD,CAA4B,GAA5B;EAAA,IAAiC,eAAjC,GAAoD,KAApD,CAAiC,eAAjC;EAEA,IAAM,QAAQ,GAAG,YAAY,CAAC,iBAAb,CACb,CAAC,CAAC,KADW,EACgC,UADhC,EAC4C,OAD5C,EAEb,CAFa,EAEM,GAFN,EAEW,eAFX,CAAjB;EAGA,IAAM,YAAY,GAAG,IAArB;EACA,IAAM,uBAAuB,GACzB,IAAI,aAAJ,CAAkB,QAAlB,EAA4B,KAA5B,EAAmC,YAAnC,CADJ;EAEA,IAAM,gBAAgB,GAClB,OAAO,CAAC,eAAR,CAAwB,uBAAxB,EAAiD,CAAC,CAAD,CAAjD,EAAsD,CAAC,CAAC,KAAxD,CADJ;EAGA,IAAM,sBAAsB,GAAG,IAAI,wBAAJ,CAA6B,QAA7B,CAA/B;EACA,IAAM,MAAM,GAAG,OAAO,CAAC,eAAR,CACX,sBADW,EACa,CAAC,EAAD,EAAK,gBAAL,CADb,EACqC,CAAC,CAAC,KADvC,CAAf;EAEA,OAAO,CAAC,6BAAR,CAAsC,gBAAtC;EACA,OAAO,MAAP;AACD;AAED,OAAO,IAAM,iBAAiB,GAAiB;EAC7C,UAAU,EAAE,WADiC;EAE7C,WAAW,EAAE,OAFgC;EAG7C,UAAU,EAAE;AAHiC,CAAxC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool2DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function maxPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input, output } = inputs;\n    const x = input;\n    assertNotComplex([input, output], 'maxPoolGrad');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const getPositions = true;\n    const maxPoolPositionsProgram = new Pool2DProgram(convInfo, 'max', getPositions);\n    const maxPoolPositions = backend.runWebGLProgram(maxPoolPositionsProgram, [x], x.dtype);\n    const maxPoolBackPropProgram = new MaxPool2DBackpropProgram(convInfo);\n    const result = backend.runWebGLProgram(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n    backend.disposeIntermediateTensorInfo(maxPoolPositions);\n    return result;\n}\nexport const maxPoolGradConfig = {\n    kernelName: MaxPoolGrad,\n    backendName: 'webgl',\n    kernelFunc: maxPoolGrad\n};\n//# sourceMappingURL=MaxPoolGrad.js.map"]},"metadata":{},"sourceType":"module"}