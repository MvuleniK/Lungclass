{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv3D } from \"../kernel_names\";\nimport { conv3DBackpropFilter } from \"../ops/conv3d_backprop_filter\";\nimport { conv3DBackpropInput } from \"../ops/conv3d_backprop_input\";\nimport { tupleValuesAreOne } from \"../ops/conv_util\";\nimport * as util from \"../util\";\nexport var conv3DGradConfig = {\n  kernelName: Conv3D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var dilations = attrs.dilations,\n        strides = attrs.strides,\n        pad = attrs.pad;\n    util.assert(tupleValuesAreOne(dilations), function () {\n      return 'Error in gradient of conv3D: dilation rates greater than 1 are ' + (\"not yet supported in gradients. Got dilations '\" + dilations + \"'\");\n    });\n\n    var _saved = _slicedToArray(saved, 2),\n        x5D = _saved[0],\n        $filter = _saved[1];\n\n    return {\n      x: function x() {\n        return conv3DBackpropInput(x5D.shape, dy, $filter, strides, pad);\n      },\n      filter: function filter() {\n        return conv3DBackpropFilter(x5D, dy, $filter.shape, strides, pad);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Conv3D_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR;AAEA,SAAQ,oBAAR;AACA,SAAQ,mBAAR;AACA,SAAQ,iBAAR;AAEA,OAAO,KAAK,IAAZ;AAEA,OAAO,IAAM,gBAAgB,GAAe;EAC1C,UAAU,EAAE,MAD8B;EAE1C,YAAY,EAAE,CAAC,GAAD,EAAM,QAAN,CAF4B;EAG1C,QAAQ,EAAE,kBAAC,EAAD,EAAe,KAAf,EAAgC,KAAhC,EAAuD;IAC/D,IAAO,SAAP,GAAkC,KAAlC,CAAO,SAAP;IAAA,IAAkB,OAAlB,GAAkC,KAAlC,CAAkB,OAAlB;IAAA,IAA2B,GAA3B,GAAkC,KAAlC,CAA2B,GAA3B;IACA,IAAI,CAAC,MAAL,CACI,iBAAiB,CAAC,SAAD,CADrB,EAEI;MAAA,OACI,yHACkD,SADlD,OADJ;IAAA,CAFJ;;IAMA,4BAAuB,KAAvB;IAAA,IAAO,GAAP;IAAA,IAAY,OAAZ;;IAEA,OAAO;MACL,CAAC,EAAE;QAAA,OAAM,mBAAmB,CACvB,GAAgB,CAAC,KADM,EACC,EADD,EACK,OADL,EAC0B,OAD1B,EACmC,GADnC,CAAzB;MAAA,CADE;MAGL,MAAM,EAAE;QAAA,OAAM,oBAAoB,CAC9B,GAD8B,EACb,EADa,EACR,OAAoB,CAAC,KADb,EACoB,OADpB,EAC6B,GAD7B,CAA1B;MAAA;IAHH,CAAP;EAMD;AAnByC,CAArC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv3D } from '../kernel_names';\nimport { conv3DBackpropFilter } from '../ops/conv3d_backprop_filter';\nimport { conv3DBackpropInput } from '../ops/conv3d_backprop_input';\nimport { tupleValuesAreOne } from '../ops/conv_util';\nimport * as util from '../util';\nexport const conv3DGradConfig = {\n    kernelName: Conv3D,\n    inputsToSave: ['x', 'filter'],\n    gradFunc: (dy, saved, attrs) => {\n        const { dilations, strides, pad } = attrs;\n        util.assert(tupleValuesAreOne(dilations), () => 'Error in gradient of conv3D: dilation rates greater than 1 are ' +\n            `not yet supported in gradients. Got dilations '${dilations}'`);\n        const [x5D, $filter] = saved;\n        return {\n            x: () => conv3DBackpropInput(x5D.shape, dy, $filter, strides, pad),\n            filter: () => conv3DBackpropFilter(x5D, dy, $filter.shape, strides, pad)\n        };\n    }\n};\n//# sourceMappingURL=Conv3D_grad.js.map"]},"metadata":{},"sourceType":"module"}