{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from \"../engine\";\nimport { dispose as _dispose, tidy } from \"../globals\";\nimport { add } from \"../ops/add\";\nimport { mul } from \"../ops/mul\";\nimport { scalar } from \"../ops/scalar\";\nimport { zerosLike } from \"../ops/zeros_like\";\nimport { registerClass } from \"../serialization\";\nimport { SGDOptimizer } from \"./sgd_optimizer\";\nexport var MomentumOptimizer = function (_SGDOptimizer) {\n  _inherits(MomentumOptimizer, _SGDOptimizer);\n\n  var _super = _createSuper(MomentumOptimizer);\n\n  function MomentumOptimizer(learningRate, momentum) {\n    var _this;\n\n    var useNesterov = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, MomentumOptimizer);\n\n    _this = _super.call(this, learningRate);\n    _this.learningRate = learningRate;\n    _this.momentum = momentum;\n    _this.useNesterov = useNesterov;\n    _this.accumulations = [];\n    _this.m = scalar(_this.momentum);\n    return _this;\n  }\n\n  _createClass(MomentumOptimizer, [{\n    key: \"applyGradients\",\n    value: function applyGradients(variableGradients) {\n      var _this2 = this;\n\n      var variableNames = Array.isArray(variableGradients) ? variableGradients.map(function (item) {\n        return item.name;\n      }) : Object.keys(variableGradients);\n      variableNames.forEach(function (name, i) {\n        var value = ENGINE.registeredVariables[name];\n\n        if (_this2.accumulations[i] == null) {\n          var trainable = false;\n          _this2.accumulations[i] = {\n            originalName: name + \"/momentum\",\n            variable: tidy(function () {\n              return zerosLike(value).variable(trainable);\n            })\n          };\n        }\n\n        var accumulation = _this2.accumulations[i].variable;\n        var gradient = Array.isArray(variableGradients) ? variableGradients[i].tensor : variableGradients[name];\n\n        if (gradient == null) {\n          return;\n        }\n\n        tidy(function () {\n          var newValue;\n          var newAccumulation = add(mul(_this2.m, accumulation), gradient);\n\n          if (_this2.useNesterov) {\n            newValue = add(mul(_this2.c, add(gradient, mul(newAccumulation, _this2.m))), value);\n          } else {\n            newValue = add(mul(_this2.c, newAccumulation), value);\n          }\n\n          accumulation.assign(newAccumulation);\n          value.assign(newValue);\n        });\n      });\n      this.incrementIterations();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.m.dispose();\n\n      if (this.accumulations != null) {\n        _dispose(this.accumulations.map(function (v) {\n          return v.variable;\n        }));\n      }\n    }\n  }, {\n    key: \"setMomentum\",\n    value: function setMomentum(momentum) {\n      this.momentum = momentum;\n    }\n  }, {\n    key: \"getWeights\",\n    value: function getWeights() {\n      return _regeneratorRuntime.async(function getWeights$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.saveIterations());\n\n            case 2:\n              _context.t0 = _context.sent;\n              return _context.abrupt(\"return\", [_context.t0].concat(this.accumulations.map(function (v) {\n                return {\n                  name: v.originalName,\n                  tensor: v.variable\n                };\n              })));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setWeights\",\n    value: function setWeights(weightValues) {\n      var trainable;\n      return _regeneratorRuntime.async(function setWeights$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.extractIterations(weightValues));\n\n            case 2:\n              weightValues = _context2.sent;\n              trainable = false;\n              this.accumulations = weightValues.map(function (v) {\n                return {\n                  originalName: v.name,\n                  variable: v.tensor.variable(trainable)\n                };\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return {\n        'learningRate': this.learningRate,\n        'momentum': this.momentum,\n        'useNesterov': this.useNesterov\n      };\n    }\n  }], [{\n    key: \"fromConfig\",\n    value: function fromConfig(cls, config) {\n      return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n  }]);\n\n  return MomentumOptimizer;\n}(SGDOptimizer);\nMomentumOptimizer.className = 'Momentum';\nregisterClass(MomentumOptimizer);","map":{"version":3,"sources":["../../src/optimizers/momentum_optimizer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { SGDOptimizer } from './sgd_optimizer';\n/** @doclink Optimizer */\nexport class MomentumOptimizer extends SGDOptimizer {\n    constructor(learningRate, momentum, useNesterov = false) {\n        super(learningRate);\n        this.learningRate = learningRate;\n        this.momentum = momentum;\n        this.useNesterov = useNesterov;\n        this.accumulations = [];\n        this.m = scalar(this.momentum);\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = ENGINE.registeredVariables[name];\n            if (this.accumulations[i] == null) {\n                const trainable = false;\n                this.accumulations[i] = {\n                    originalName: `${name}/momentum`,\n                    variable: tidy(() => zerosLike(value).variable(trainable))\n                };\n            }\n            const accumulation = this.accumulations[i].variable;\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            tidy(() => {\n                let newValue;\n                const newAccumulation = add(mul(this.m, accumulation), gradient);\n                if (this.useNesterov) {\n                    newValue = add(mul(this.c, add(gradient, mul(newAccumulation, this.m))), value);\n                }\n                else {\n                    newValue = add(mul(this.c, newAccumulation), value);\n                }\n                accumulation.assign(newAccumulation);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.m.dispose();\n        if (this.accumulations != null) {\n            dispose(this.accumulations.map(v => v.variable));\n        }\n    }\n    /**\n     * Sets the momentum of the optimizer.\n     *\n     * @param momentum\n     */\n    setMomentum(momentum) {\n        this.momentum = momentum;\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        return [await this.saveIterations()].concat(this.accumulations.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const trainable = false;\n        this.accumulations = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'momentum': this.momentum,\n            'useNesterov': this.useNesterov\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n}\n/** @nocollapse */\nMomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\nregisterClass(MomentumOptimizer);\n//# sourceMappingURL=momentum_optimizer.js.map"]},"metadata":{},"sourceType":"module"}