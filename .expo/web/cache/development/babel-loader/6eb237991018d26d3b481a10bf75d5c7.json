{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { absConfig } from \"./kernels/Abs\";\nimport { acosConfig } from \"./kernels/Acos\";\nimport { acoshConfig } from \"./kernels/Acosh\";\nimport { addConfig } from \"./kernels/Add\";\nimport { asinConfig } from \"./kernels/Asin\";\nimport { asinhConfig } from \"./kernels/Asinh\";\nimport { atanConfig } from \"./kernels/Atan\";\nimport { atanhConfig } from \"./kernels/Atanh\";\nimport { avgPoolConfig } from \"./kernels/AvgPool\";\nimport { avgPoolBackpropConfig } from \"./kernels/AvgPoolBackprop\";\nimport { batchNormConfig } from \"./kernels/BatchNorm\";\nimport { castConfig } from \"./kernels/Cast\";\nimport { ceilConfig } from \"./kernels/Ceil\";\nimport { clipConfig } from \"./kernels/Clip\";\nimport { complexConfig } from \"./kernels/Complex\";\nimport { concatConfig } from \"./kernels/Concat\";\nimport { cosConfig } from \"./kernels/Cos\";\nimport { coshConfig } from \"./kernels/Cosh\";\nimport { dilation2dConfig } from \"./kernels/Dilation2D\";\nimport { dilation2dBackpropFilterConfig } from \"./kernels/Dilation2DBackpropFilter\";\nimport { dilation2dBackpropInputConfig } from \"./kernels/Dilation2DBackpropInput\";\nimport { divConfig } from \"./kernels/Div\";\nimport { eluConfig } from \"./kernels/Elu\";\nimport { erfConfig } from \"./kernels/Erf\";\nimport { expConfig } from \"./kernels/Exp\";\nimport { expm1Config } from \"./kernels/Expm1\";\nimport { fftConfig } from \"./kernels/FFT\";\nimport { flipLeftRightConfig } from \"./kernels/FlipLeftRight\";\nimport { floorConfig } from \"./kernels/Floor\";\nimport { identityConfig } from \"./kernels/Identity\";\nimport { ifftConfig } from \"./kernels/IFFT\";\nimport { imagConfig } from \"./kernels/Imag\";\nimport { isFiniteConfig } from \"./kernels/IsFinite\";\nimport { isInfConfig } from \"./kernels/IsInf\";\nimport { isNaNConfig } from \"./kernels/IsNaN\";\nimport { logConfig } from \"./kernels/Log\";\nimport { log1pConfig } from \"./kernels/Log1p\";\nimport { logicalNotConfig } from \"./kernels/LogicalNot\";\nimport { maxConfig } from \"./kernels/Max\";\nimport { maxPoolConfig } from \"./kernels/MaxPool\";\nimport { maxPoolBackpropConfig } from \"./kernels/MaxPoolBackprop\";\nimport { maxPoolWithArgmaxConfig } from \"./kernels/MaxPoolWithArgmax\";\nimport { multiplyConfig } from \"./kernels/Multiply\";\nimport { nonMaxSuppressionV4Config } from \"./kernels/NonMaxSuppressionV4\";\nimport { nonMaxSuppressionV5Config } from \"./kernels/NonMaxSuppressionV5\";\nimport { notEqualConfig } from \"./kernels/NotEqual\";\nimport { padV2Config } from \"./kernels/PadV2\";\nimport { realConfig } from \"./kernels/Real\";\nimport { reciprocalConfig } from \"./kernels/Reciprocal\";\nimport { reshapeConfig } from \"./kernels/Reshape\";\nimport { rotateWithOffsetConfig } from \"./kernels/RotateWithOffset\";\nimport { roundConfig } from \"./kernels/Round\";\nimport { rsqrtConfig } from \"./kernels/Rsqrt\";\nimport { seluConfig } from \"./kernels/Selu\";\nimport { sigmoidConfig } from \"./kernels/Sigmoid\";\nimport { signConfig } from \"./kernels/Sign\";\nimport { sinConfig } from \"./kernels/Sin\";\nimport { sinhConfig } from \"./kernels/Sinh\";\nimport { sliceConfig } from \"./kernels/Slice\";\nimport { softplusConfig } from \"./kernels/Softplus\";\nimport { spaceToBatchNDConfig } from \"./kernels/SpaceToBatchND\";\nimport { sqrtConfig } from \"./kernels/Sqrt\";\nimport { squareConfig } from \"./kernels/Square\";\nimport { squaredDifferenceConfig } from \"./kernels/SquaredDifference\";\nimport { stepConfig } from \"./kernels/Step\";\nimport { subConfig } from \"./kernels/Sub\";\nimport { tanConfig } from \"./kernels/Tan\";\nimport { tanhConfig } from \"./kernels/Tanh\";\nimport { transposeConfig } from \"./kernels/Transpose\";\nimport { uniqueConfig } from \"./kernels/Unique\";\nvar kernelConfigs = [absConfig, acosConfig, acoshConfig, addConfig, asinConfig, asinhConfig, atanConfig, atanhConfig, avgPoolConfig, avgPoolBackpropConfig, batchNormConfig, castConfig, ceilConfig, clipConfig, complexConfig, concatConfig, cosConfig, coshConfig, dilation2dConfig, dilation2dBackpropInputConfig, dilation2dBackpropFilterConfig, divConfig, eluConfig, erfConfig, expConfig, expm1Config, fftConfig, flipLeftRightConfig, floorConfig, identityConfig, ifftConfig, imagConfig, isFiniteConfig, isInfConfig, isNaNConfig, logConfig, log1pConfig, logicalNotConfig, maxPoolConfig, maxPoolBackpropConfig, maxPoolWithArgmaxConfig, maxConfig, multiplyConfig, nonMaxSuppressionV4Config, nonMaxSuppressionV5Config, notEqualConfig, padV2Config, realConfig, reciprocalConfig, reshapeConfig, rotateWithOffsetConfig, roundConfig, rsqrtConfig, seluConfig, sigmoidConfig, signConfig, sinConfig, sinhConfig, sliceConfig, softplusConfig, spaceToBatchNDConfig, sqrtConfig, squareConfig, squaredDifferenceConfig, stepConfig, subConfig, tanConfig, tanhConfig, transposeConfig, uniqueConfig];\n\nfor (var _i = 0, _kernelConfigs = kernelConfigs; _i < _kernelConfigs.length; _i++) {\n  var kernelConfig = _kernelConfigs[_i];\n  registerKernel(kernelConfig);\n}","map":{"version":3,"sources":["../src/register_all_kernels.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPoolBackpropConfig } from './kernels/AvgPoolBackprop';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipConfig } from './kernels/Clip';\nimport { complexConfig } from './kernels/Complex';\nimport { concatConfig } from './kernels/Concat';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { dilation2dConfig } from './kernels/Dilation2D';\nimport { dilation2dBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2dBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { divConfig } from './kernels/Div';\nimport { eluConfig } from './kernels/Elu';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { maxConfig } from './kernels/Max';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPoolBackpropConfig } from './kernels/MaxPoolBackprop';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { padV2Config } from './kernels/PadV2';\nimport { realConfig } from './kernels/Real';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { subConfig } from './kernels/Sub';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\n// List all kernel configs here\nconst kernelConfigs = [\n    absConfig,\n    acosConfig,\n    acoshConfig,\n    addConfig,\n    asinConfig,\n    asinhConfig,\n    atanConfig,\n    atanhConfig,\n    avgPoolConfig,\n    avgPoolBackpropConfig,\n    batchNormConfig,\n    castConfig,\n    ceilConfig,\n    clipConfig,\n    complexConfig,\n    concatConfig,\n    cosConfig,\n    coshConfig,\n    dilation2dConfig,\n    dilation2dBackpropInputConfig,\n    dilation2dBackpropFilterConfig,\n    divConfig,\n    eluConfig,\n    erfConfig,\n    expConfig,\n    expm1Config,\n    fftConfig,\n    flipLeftRightConfig,\n    floorConfig,\n    identityConfig,\n    ifftConfig,\n    imagConfig,\n    isFiniteConfig,\n    isInfConfig,\n    isNaNConfig,\n    logConfig,\n    log1pConfig,\n    logicalNotConfig,\n    maxPoolConfig,\n    maxPoolBackpropConfig,\n    maxPoolWithArgmaxConfig,\n    maxConfig,\n    multiplyConfig,\n    nonMaxSuppressionV4Config,\n    nonMaxSuppressionV5Config,\n    notEqualConfig,\n    padV2Config,\n    realConfig,\n    reciprocalConfig,\n    reshapeConfig,\n    rotateWithOffsetConfig,\n    roundConfig,\n    rsqrtConfig,\n    seluConfig,\n    sigmoidConfig,\n    signConfig,\n    sinConfig,\n    sinhConfig,\n    sliceConfig,\n    softplusConfig,\n    spaceToBatchNDConfig,\n    sqrtConfig,\n    squareConfig,\n    squaredDifferenceConfig,\n    stepConfig,\n    subConfig,\n    tanConfig,\n    tanhConfig,\n    transposeConfig,\n    uniqueConfig,\n];\nfor (const kernelConfig of kernelConfigs) {\n    registerKernel(kernelConfig);\n}\n//# sourceMappingURL=register_all_kernels.js.map"]},"metadata":{},"sourceType":"module"}