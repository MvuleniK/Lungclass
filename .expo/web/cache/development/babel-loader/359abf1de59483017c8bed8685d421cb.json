{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from \"./packing_util\";\nimport { getCoordsDataType } from \"./shader_compiler\";\nexport var PackProgram = _createClass(function PackProgram(outputShape) {\n  _classCallCheck(this, PackProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = false;\n  this.packedOutput = true;\n  this.outputShape = outputShape;\n  var rank = outputShape.length;\n\n  if (rank === 0) {\n    this.userCode = \"\\n        void main() {\\n          setOutput(vec4(getA(), 0., 0., 0.));\\n        }\\n      \";\n  } else {\n    var channels = getChannels('rc', rank);\n    var dtype = getCoordsDataType(rank);\n    var outOfBoundsCondition = getOutOfBoundsCondition(rank, outputShape, channels);\n    var setup = getSetup(rank, outputShape[outputShape.length - 1], outputShape[outputShape.length - 2], channels);\n    var output = getOutput(outputShape, channels);\n    this.userCode = \"\\n        void main() {\\n          \" + dtype + \" rc = getOutputCoords();\\n\\n          if(\" + outOfBoundsCondition + \") {\\n            setOutput(vec4(0));\\n          } else {\\n            \" + setup + \"\\n\\n            setOutput(vec4(\" + output + \"));\\n          }\\n        }\\n      \";\n  }\n});\n\nfunction getSourceCoordsArr(rank, dims) {\n  var coords = [];\n\n  for (var row = 0; row <= 1; row++) {\n    for (var col = 0; col <= 1; col++) {\n      var coord = (row === 0 ? 'r' : 'rp1') + \", \" + (col === 0 ? 'c' : 'cp1');\n\n      for (var d = 2; d < rank; d++) {\n        coord = dims[dims.length - 1 - d] + \",\" + coord;\n      }\n\n      coords.push(coord);\n    }\n  }\n\n  return coords;\n}\n\nfunction getOutOfBoundsCondition(rank, shape, dims) {\n  if (rank === 1) {\n    return \"rc > \" + shape[0];\n  }\n\n  var cond = '';\n\n  for (var i = rank - 2; i < rank; i++) {\n    cond += dims[i] + \" >= \" + shape[i];\n\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\nfunction getSetup(rank, cols, rows, dims) {\n  if (rank === 1) {\n    return '';\n  }\n\n  var innerDims = dims.slice(-2);\n  return \"\\n    int r = \" + innerDims[0] + \";\\n    int c = \" + innerDims[1] + \";\\n    int rp1 = r + 1;\\n    int cp1 = c + 1;\\n\\n    bool cEdge = cp1 >= \" + cols + \";\\n    bool rEdge = rp1 >= \" + rows + \";\\n  \";\n}\n\nfunction getOutput(shape, dims) {\n  var rank = shape.length;\n  var sourceCoords = getSourceCoordsArr(rank, dims);\n\n  if (rank === 1) {\n    return \"getA(rc),\\n            rc + 1 >= \" + shape[0] + \" ? 0. : getA(rc + 1),\\n            0, 0\";\n  }\n\n  return \"getA(\" + sourceCoords[0] + \"),\\n          cEdge ? 0. : getA(\" + sourceCoords[1] + \"),\\n          rEdge ? 0. : getA(\" + sourceCoords[2] + \"),\\n          rEdge || cEdge ? 0. : getA(\" + sourceCoords[3] + \")\";\n}","map":{"version":3,"sources":["../src/pack_gpu.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PackProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        // Only input / output 3D tensors.\n        this.outputShape = outputShape;\n        const rank = outputShape.length;\n        if (rank === 0) {\n            this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n        }\n        else {\n            const channels = getChannels('rc', rank);\n            const dtype = getCoordsDataType(rank);\n            const outOfBoundsCondition = getOutOfBoundsCondition(rank, outputShape, channels);\n            const setup = getSetup(rank, outputShape[outputShape.length - 1], outputShape[outputShape.length - 2], channels);\n            const output = getOutput(outputShape, channels);\n            this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n        }\n    }\n}\nfunction getSourceCoordsArr(rank, dims) {\n    const coords = [];\n    for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n            let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n            for (let d = 2; d < rank; d++) {\n                coord = `${dims[dims.length - 1 - d]},` + coord;\n            }\n            coords.push(coord);\n        }\n    }\n    return coords;\n}\nfunction getOutOfBoundsCondition(rank, shape, dims) {\n    if (rank === 1) {\n        return `rc > ${shape[0]}`;\n    }\n    let cond = '';\n    for (let i = rank - 2; i < rank; i++) {\n        cond += `${dims[i]} >= ${shape[i]}`;\n        if (i < rank - 1) {\n            cond += '||';\n        }\n    }\n    return cond;\n}\nfunction getSetup(rank, cols, rows, dims) {\n    if (rank === 1) {\n        return '';\n    }\n    const innerDims = dims.slice(-2);\n    return `\n    int r = ${innerDims[0]};\n    int c = ${innerDims[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${cols};\n    bool rEdge = rp1 >= ${rows};\n  `;\n}\nfunction getOutput(shape, dims) {\n    const rank = shape.length;\n    const sourceCoords = getSourceCoordsArr(rank, dims);\n    if (rank === 1) {\n        return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n    }\n    return `getA(${sourceCoords[0]}),\n          cEdge ? 0. : getA(${sourceCoords[1]}),\n          rEdge ? 0. : getA(${sourceCoords[2]}),\n          rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n}\n//# sourceMappingURL=pack_gpu.js.map"]},"metadata":{},"sourceType":"module"}