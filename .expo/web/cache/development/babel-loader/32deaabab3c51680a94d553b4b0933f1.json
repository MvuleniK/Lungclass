{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from \"../cpu_util\";\nexport function simpleAbsImpl(vals) {\n  var resultValues = new Float32Array(vals.length);\n\n  for (var i = 0; i < vals.length; ++i) {\n    resultValues[i] = Math.abs(vals[i]);\n  }\n\n  return resultValues;\n}\nexport var abs = function abs(args) {\n  var x = args.inputs.x;\n  var cpuBackend = args.backend;\n  assertNotComplex(x, 'abs');\n  var resultValues = new Float32Array(util.sizeFromShape(x.shape));\n  var values = cpuBackend.data.get(x.dataId).values;\n  resultValues = simpleAbsImpl(values);\n  return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nexport var absConfig = {\n  kernelName: Abs,\n  backendName: 'cpu',\n  kernelFunc: abs\n};","map":{"version":3,"sources":["../../src/kernels/Abs.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,GAAR,EAA8D,IAA9D,QAAyE,uBAAzE;AAGA,SAAQ,gBAAR;AAEA,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAAwC;EAC5C,IAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,IAAI,CAAC,MAAtB,CAArB;;EACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;IACpC,YAAY,CAAC,CAAD,CAAZ,GAAkB,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,CAAD,CAAb,CAAlB;EACD;;EACD,OAAO,YAAP;AACD;AAED,OAAO,IAAM,GAAG,GAAG,SAAN,GAAM,CAAC,IAAD,EAAuD;EACxE,IAAO,CAAP,GAAY,IAAI,CAAC,MAAjB,CAAO,CAAP;EACA,IAAM,UAAU,GAAG,IAAI,CAAC,OAAxB;EAEA,gBAAgB,CAAC,CAAD,EAAI,KAAJ,CAAhB;EAEA,IAAI,YAAY,GAAG,IAAI,YAAJ,CAAiB,IAAI,CAAC,aAAL,CAAmB,CAAC,CAAC,KAArB,CAAjB,CAAnB;EACA,IAAM,MAAM,GAAG,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAAoB,CAAC,CAAC,MAAtB,EAA8B,MAA7C;EACA,YAAY,GAAG,aAAa,CAAC,MAAD,CAA5B;EAEA,OAAO,UAAU,CAAC,UAAX,CAAsB,YAAtB,EAAoC,CAAC,CAAC,KAAtC,EAA6C,SAA7C,CAAP;AACD,CAXM;AAaP,OAAO,IAAM,SAAS,GAAiB;EACrC,UAAU,EAAE,GADyB;EAErC,WAAW,EAAE,KAFwB;EAGrC,UAAU,EAAE;AAHyB,CAAhC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function simpleAbsImpl(vals) {\n    const resultValues = new Float32Array(vals.length);\n    for (let i = 0; i < vals.length; ++i) {\n        resultValues[i] = Math.abs(vals[i]);\n    }\n    return resultValues;\n}\nexport const abs = (args) => {\n    const { x } = args.inputs;\n    const cpuBackend = args.backend;\n    assertNotComplex(x, 'abs');\n    let resultValues = new Float32Array(util.sizeFromShape(x.shape));\n    const values = cpuBackend.data.get(x.dataId).values;\n    resultValues = simpleAbsImpl(values);\n    return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nexport const absConfig = {\n    kernelName: Abs,\n    backendName: 'cpu',\n    kernelFunc: abs,\n};\n//# sourceMappingURL=Abs.js.map"]},"metadata":{},"sourceType":"module"}