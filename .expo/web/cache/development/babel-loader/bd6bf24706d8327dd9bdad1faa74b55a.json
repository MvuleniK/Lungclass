{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar contexts = {};\nvar WEBGL_ATTRIBUTES = {\n  alpha: false,\n  antialias: false,\n  premultipliedAlpha: false,\n  preserveDrawingBuffer: false,\n  depth: false,\n  stencil: false,\n  failIfMajorPerformanceCaveat: true\n};\nexport function clearWebGLContext(webGLVersion) {\n  delete contexts[webGLVersion];\n}\nexport function setWebGLContext(webGLVersion, gl) {\n  contexts[webGLVersion] = gl;\n}\nexport function getWebGLContext(webGLVersion) {\n  if (!(webGLVersion in contexts)) {\n    var newCtx = getWebGLRenderingContext(webGLVersion);\n\n    if (newCtx !== null) {\n      contexts[webGLVersion] = newCtx;\n    } else {\n      console.log('Could not get context for WebGL version', webGLVersion);\n      return null;\n    }\n  }\n\n  var gl = contexts[webGLVersion];\n\n  if (gl.isContextLost()) {\n    delete contexts[webGLVersion];\n    return getWebGLContext(webGLVersion);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n  return contexts[webGLVersion];\n}\n\nfunction createCanvas(webGLVersion) {\n  if (typeof OffscreenCanvas !== 'undefined' && webGLVersion === 2) {\n    return new OffscreenCanvas(300, 150);\n  } else if (typeof document !== 'undefined') {\n    return document.createElement('canvas');\n  } else {\n    throw new Error('Cannot create a canvas in this context');\n  }\n}\n\nfunction getWebGLRenderingContext(webGLVersion) {\n  if (webGLVersion !== 1 && webGLVersion !== 2) {\n    throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n  }\n\n  var canvas = createCanvas(webGLVersion);\n  canvas.addEventListener('webglcontextlost', function (ev) {\n    ev.preventDefault();\n    delete contexts[webGLVersion];\n  }, false);\n\n  if (webGLVersion === 1) {\n    return canvas.getContext('webgl', WEBGL_ATTRIBUTES) || canvas.getContext('experimental-webgl', WEBGL_ATTRIBUTES);\n  }\n\n  return canvas.getContext('webgl2', WEBGL_ATTRIBUTES);\n}","map":{"version":3,"sources":["../src/canvas_util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst contexts = {};\nconst WEBGL_ATTRIBUTES = {\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: true\n};\nexport function clearWebGLContext(webGLVersion) {\n    delete contexts[webGLVersion];\n}\nexport function setWebGLContext(webGLVersion, gl) {\n    contexts[webGLVersion] = gl;\n}\nexport function getWebGLContext(webGLVersion) {\n    if (!(webGLVersion in contexts)) {\n        const newCtx = getWebGLRenderingContext(webGLVersion);\n        if (newCtx !== null) {\n            contexts[webGLVersion] = newCtx;\n        }\n        else {\n            console.log('Could not get context for WebGL version', webGLVersion);\n            return null;\n        }\n    }\n    const gl = contexts[webGLVersion];\n    if (gl.isContextLost()) {\n        delete contexts[webGLVersion];\n        return getWebGLContext(webGLVersion);\n    }\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.DITHER);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.SAMPLE_COVERAGE);\n    gl.enable(gl.SCISSOR_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n    return contexts[webGLVersion];\n}\nfunction createCanvas(webGLVersion) {\n    if (typeof OffscreenCanvas !== 'undefined' && webGLVersion === 2) {\n        return new OffscreenCanvas(300, 150);\n    }\n    else if (typeof document !== 'undefined') {\n        return document.createElement('canvas');\n    }\n    else {\n        throw new Error('Cannot create a canvas in this context');\n    }\n}\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion !== 1 && webGLVersion !== 2) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    const canvas = createCanvas(webGLVersion);\n    canvas.addEventListener('webglcontextlost', (ev) => {\n        ev.preventDefault();\n        delete contexts[webGLVersion];\n    }, false);\n    if (webGLVersion === 1) {\n        return (canvas.getContext('webgl', WEBGL_ATTRIBUTES) ||\n            canvas.getContext('experimental-webgl', WEBGL_ATTRIBUTES));\n    }\n    return canvas.getContext('webgl2', WEBGL_ATTRIBUTES);\n}\n//# sourceMappingURL=canvas_util.js.map"]},"metadata":{},"sourceType":"module"}