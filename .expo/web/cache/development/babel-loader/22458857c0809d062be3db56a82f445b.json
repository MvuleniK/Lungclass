{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var AddNProgram = _createClass(function AddNProgram(outputShape, shapes) {\n  _classCallCheck(this, AddNProgram);\n\n  this.outputShape = [];\n  this.outputShape = outputShape;\n  this.variableNames = shapes.map(function (_, i) {\n    return \"T\" + i;\n  });\n  var snippets = [];\n  this.variableNames.forEach(function (variable) {\n    snippets.push(\"float v\" + variable + \" = get\" + variable + \"AtOutCoords();\");\n  });\n  var operation = this.variableNames.map(function (variable) {\n    return \"v\" + variable;\n  }).join(' + ');\n  this.userCode = \"\\n      void main() {\\n        \" + snippets.join('\\n        ') + \"\\n\\n        float result = \" + operation + \";\\n        setOutput(result);\\n      }\\n    \";\n});","map":{"version":3,"sources":["../src/addn_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAIH,WAAa,WAAb,gBAKE,qBAAY,WAAZ,EAAmC,MAAnC,EAAqD;EAAA;;EAHrD,KAAA,WAAA,GAAwB,EAAxB;EAIE,KAAK,WAAL,GAAmB,WAAnB;EACA,KAAK,aAAL,GAAqB,MAAM,CAAC,GAAP,CAAW,UAAC,CAAD,EAAI,CAAJ;IAAA,aAAc,CAAd;EAAA,CAAX,CAArB;EAEA,IAAM,QAAQ,GAAa,EAA3B;EAEA,KAAK,aAAL,CAAmB,OAAnB,CAA2B,UAAA,QAAQ,EAAG;IACpC,QAAQ,CAAC,IAAT,aAAwB,QAAxB,cAAyC,QAAzC;EACD,CAFD;EAKA,IAAM,SAAS,GAAG,KAAK,aAAL,CACK,GADL,CACS,UAAA,QAAQ,EAAG;IACd,aAAW,QAAX;EACD,CAHL,EAIK,IAJL,CAIU,KAJV,CAAlB;EAMA,KAAK,QAAL,uCAEM,QAAQ,CAAC,IAAT,CAAc,YAAd,CAFN,mCAIqB,SAJrB;AAQD,CA9BH","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class AddNProgram {\n    constructor(outputShape, shapes) {\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(variable => {\n            snippets.push(`float v${variable} = get${variable}AtOutCoords();`);\n        });\n        // Calculate the sum of all elements.\n        const operation = this.variableNames\n            .map(variable => {\n            return `v${variable}`;\n        })\n            .join(' + ');\n        this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        float result = ${operation};\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=addn_gpu.js.map"]},"metadata":{},"sourceType":"module"}