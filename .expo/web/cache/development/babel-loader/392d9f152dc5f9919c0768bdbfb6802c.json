{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var DepthToSpaceProgram = function () {\n  function DepthToSpaceProgram(outputShape, blockSize, dataFormat) {\n    _classCallCheck(this, DepthToSpaceProgram);\n\n    this.variableNames = ['x'];\n    this.outputShape = [];\n    this.outputShape = outputShape;\n    this.blockSize = blockSize;\n    this.dataFormat = dataFormat;\n    this.userCode = \"\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = \" + this.getHeightCoordString() + \";\\n      int w = \" + this.getWidthCoordString() + \";\\n      int d = \" + this.getDepthCoordString() + \";\\n\\n      int in_h = h / \" + blockSize + \";\\n      int offset_h = imod(h, \" + blockSize + \");\\n      int in_w = w / \" + blockSize + \";\\n      int offset_w = imod(w, \" + blockSize + \");\\n      int offset_d = (offset_h * \" + blockSize + \" + offset_w) *\\n        \" + this.getOutputDepthSize() + \";\\n      int in_d = d + offset_d;\\n\\n      float result = \" + this.getInputSamplingString() + \";\\n      setOutput(result);\\n    }\\n  \";\n  }\n\n  _createClass(DepthToSpaceProgram, [{\n    key: \"getHeightCoordString\",\n    value: function getHeightCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[1]\";\n      } else {\n        return \"coords[2]\";\n      }\n    }\n  }, {\n    key: \"getWidthCoordString\",\n    value: function getWidthCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[2]\";\n      } else {\n        return \"coords[3]\";\n      }\n    }\n  }, {\n    key: \"getDepthCoordString\",\n    value: function getDepthCoordString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"coords[3]\";\n      } else {\n        return \"coords[1]\";\n      }\n    }\n  }, {\n    key: \"getOutputDepthSize\",\n    value: function getOutputDepthSize() {\n      if (this.dataFormat === 'NHWC') {\n        return this.outputShape[3];\n      } else {\n        return this.outputShape[1];\n      }\n    }\n  }, {\n    key: \"getInputSamplingString\",\n    value: function getInputSamplingString() {\n      if (this.dataFormat === 'NHWC') {\n        return \"getX(b, in_h, in_w, in_d)\";\n      } else {\n        return \"getX(b, in_d, in_h, in_w)\";\n      }\n    }\n  }]);\n\n  return DepthToSpaceProgram;\n}();","map":{"version":3,"sources":["../src/depth_to_space_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAIH,WAAa,mBAAb;EAOE,6BACI,WADJ,EAC2B,SAD3B,EAC8C,UAD9C,EACuE;IAAA;;IAPvE,KAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;IACA,KAAA,WAAA,GAAwB,EAAxB;IAOE,KAAK,WAAL,GAAmB,WAAnB;IACA,KAAK,SAAL,GAAiB,SAAjB;IACA,KAAK,UAAL,GAAkB,UAAlB;IACA,KAAK,QAAL,8GAIY,KAAK,oBAAL,EAJZ,yBAKY,KAAK,mBAAL,EALZ,yBAMY,KAAK,mBAAL,EANZ,kCAQmB,SARnB,wCAS2B,SAT3B,iCAUmB,SAVnB,wCAW2B,SAX3B,6CAY+B,SAZ/B,gCAaM,KAAK,kBAAL,EAbN,kEAgBmB,KAAK,sBAAL,EAhBnB;EAoBD;;EAhCH;IAAA;IAAA,OAkCU,gCAAoB;MAC1B,IAAI,KAAK,UAAL,KAAoB,MAAxB,EAAgC;QAC9B;MACD,CAFD,MAEO;QACL;MACD;IACF;EAxCH;IAAA;IAAA,OA0CU,+BAAmB;MACzB,IAAI,KAAK,UAAL,KAAoB,MAAxB,EAAgC;QAC9B;MACD,CAFD,MAEO;QACL;MACD;IACF;EAhDH;IAAA;IAAA,OAkDU,+BAAmB;MACzB,IAAI,KAAK,UAAL,KAAoB,MAAxB,EAAgC;QAC9B;MACD,CAFD,MAEO;QACL;MACD;IACF;EAxDH;IAAA;IAAA,OA0DU,8BAAkB;MACxB,IAAI,KAAK,UAAL,KAAoB,MAAxB,EAAgC;QAC9B,OAAO,KAAK,WAAL,CAAiB,CAAjB,CAAP;MACD,CAFD,MAEO;QACL,OAAO,KAAK,WAAL,CAAiB,CAAjB,CAAP;MACD;IACF;EAhEH;IAAA;IAAA,OAkEU,kCAAsB;MAC5B,IAAI,KAAK,UAAL,KAAoB,MAAxB,EAAgC;QAC9B;MACD,CAFD,MAEO;QACL;MACD;IACF;EAxEH;;EAAA;AAAA","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class DepthToSpaceProgram {\n    constructor(outputShape, blockSize, dataFormat) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.blockSize = blockSize;\n        this.dataFormat = dataFormat;\n        this.userCode = `\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${blockSize};\n      int offset_h = imod(h, ${blockSize});\n      int in_w = w / ${blockSize};\n      int offset_w = imod(w, ${blockSize});\n      int offset_d = (offset_h * ${blockSize} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `;\n    }\n    getHeightCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[1]`;\n        }\n        else {\n            return `coords[2]`;\n        }\n    }\n    getWidthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[2]`;\n        }\n        else {\n            return `coords[3]`;\n        }\n    }\n    getDepthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[3]`;\n        }\n        else {\n            return `coords[1]`;\n        }\n    }\n    getOutputDepthSize() {\n        if (this.dataFormat === 'NHWC') {\n            return this.outputShape[3];\n        }\n        else {\n            return this.outputShape[1];\n        }\n    }\n    getInputSamplingString() {\n        if (this.dataFormat === 'NHWC') {\n            return `getX(b, in_h, in_w, in_d)`;\n        }\n        else {\n            return `getX(b, in_d, in_h, in_w)`;\n        }\n    }\n}\n//# sourceMappingURL=depth_to_space_gpu.js.map"]},"metadata":{},"sourceType":"module"}