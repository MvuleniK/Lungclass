{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from \"./packing_util\";\nimport { getCoordsDataType } from \"./shader_compiler\";\nexport var PadPackedProgram = _createClass(function PadPackedProgram(xShape, paddings, constantValue) {\n  _classCallCheck(this, PadPackedProgram);\n\n  this.variableNames = ['x'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = paddings.map(function (p, i) {\n    return p[0] + xShape[i] + p[1];\n  });\n  var rank = xShape.length;\n  var dtype = getCoordsDataType(rank);\n  var start = paddings.map(function (p) {\n    return p[0];\n  }).join(',');\n  var end = paddings.map(function (p, i) {\n    return p[0] + xShape[i];\n  }).join(',');\n  var coords = getChannels('rc', rank);\n  var source = getChannels('source', rank);\n  var cLimit = coords[rank - 1] + \" < \" + this.outputShape[rank - 1];\n  var innerDims = rank === 1 ? 'source' : \"vec2(\" + source.slice(-2).join() + \")\";\n  var componentSetup = [dtype + \" rc = outputLoc;\", coords[rank - 1] + \" += 1;\\n       if(\" + cLimit + \") {\\n      \", rank === 1 ? '' : \"}\\n       rc = outputLoc;\\n       \" + coords[rank - 2] + \" += 1;\\n       if(\" + coords[rank - 2] + \" < \" + this.outputShape[rank - 2] + \") {\", rank === 1 ? '' : \"  \" + coords[rank - 1] + \" += 1;\\n         if(\" + cLimit + \") {\"];\n  var paddingArea = rank === 1 ? 'rc < start || rc >= end' : 'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n  var mainLoop = '';\n\n  for (var i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n    mainLoop += \"\\n        \" + componentSetup[i] + \"\\n        if (\" + paddingArea + \") {\\n          result[\" + i + \"] = float(\" + constantValue + \");\\n        } else {\\n          \" + dtype + \" source = rc - start;\\n          result[\" + i + \"] = getChannel(getX(\" + source.join() + \"), \" + innerDims + \");\\n        }\\n      \";\n  }\n\n  mainLoop += rank === 1 ? \"} \" : \"}}\";\n  this.userCode = \"\\n      const \" + dtype + \" start = \" + dtype + \"(\" + start + \");\\n      const \" + dtype + \" end = \" + dtype + \"(\" + end + \");\\n\\n      void main() {\\n        \" + dtype + \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \" + mainLoop + \"\\n        setOutput(result);\\n      }\\n    \";\n});","map":{"version":3,"sources":["../src/pad_packed_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,WAAR;AACA,SAAQ,iBAAR;AAEA,WAAa,gBAAb,gBAOE,0BACI,MADJ,EACsB,QADtB,EAEI,aAFJ,EAEyB;EAAA;;EARzB,KAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;EACA,KAAA,YAAA,GAAe,IAAf;EACA,KAAA,YAAA,GAAe,IAAf;EAOE,KAAK,WAAL,GAAmB,QAAQ,CAAC,GAAT,CACf,UAAC,CAAD,EAAI,CAAJ;IAAA,OAAU,CAAC,CAAC,CAAD,CAAD,GAAuB,MAAM,CAAC,CAAD,CAA7B,GAAmC,CAAC,CAAC,CAAD,CAA9C;EAAA,CADe,CAAnB;EAEA,IAAM,IAAI,GAAG,MAAM,CAAC,MAApB;EACA,IAAM,KAAK,GAAG,iBAAiB,CAAC,IAAD,CAA/B;EAEA,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAA,CAAC;IAAA,OAAI,CAAC,CAAC,CAAD,CAAL;EAAA,CAAd,EAAwB,IAAxB,CAA6B,GAA7B,CAAd;EACA,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAC,CAAD,EAAI,CAAJ;IAAA,OAAU,CAAC,CAAC,CAAD,CAAD,GAAO,MAAM,CAAC,CAAD,CAAvB;EAAA,CAAb,EAAyC,IAAzC,CAA8C,GAA9C,CAAZ;EACA,IAAM,MAAM,GAAG,WAAW,CAAC,IAAD,EAAO,IAAP,CAA1B;EACA,IAAM,MAAM,GAAG,WAAW,CAAC,QAAD,EAAW,IAAX,CAA1B;EACA,IAAM,MAAM,GAAM,MAAM,CAAC,IAAI,GAAG,CAAR,CAAZ,WAA4B,KAAK,WAAL,CAAiB,IAAI,GAAG,CAAxB,CAAxC;EACA,IAAM,SAAS,GACX,IAAI,KAAK,CAAT,GAAa,QAAb,aAAgC,MAAM,CAAC,KAAP,CAAa,CAAC,CAAd,EAAiB,IAAjB,EAAhC,MADJ;EAGA,IAAM,cAAc,GAAG,CAClB,KADkB,uBACU,MAAM,CAAC,IAAI,GAAG,CAAR,CADhB,0BAEf,MAFe,kBAIrB,IAAI,KAAK,CAAT,GAAa,EAAb,0CAEG,MAAM,CAAC,IAAI,GAAG,CAAR,CAFT,0BAGM,MAAM,CAAC,IAAI,GAAG,CAAR,CAHZ,WAG4B,KAAK,WAAL,CAAiB,IAAI,GAAG,CAAxB,CAH5B,QAJqB,EAQrB,IAAI,KAAK,CAAT,GAAa,EAAb,UAAuB,MAAM,CAAC,IAAI,GAAG,CAAR,CAA7B,4BACQ,MADR,QARqB,CAAvB;EAYA,IAAM,WAAW,GAAG,IAAI,KAAK,CAAT,GAChB,yBADgB,GAEhB,4DAFJ;EAGA,IAAI,QAAQ,GAAG,EAAf;;EACA,KAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiB,CAArC,EAAwC,CAAC,GAAG,CAA5C,EAA+C,CAAC,EAAhD,EAAoD;IAClD,QAAQ,mBACJ,cAAc,CAAC,CAAD,CADV,sBAEA,WAFA,8BAGK,CAHL,kBAGmB,aAHnB,wCAKF,KALE,gDAMK,CANL,4BAM6B,MAAM,CAAC,IAAP,EAN7B,WAMgD,SANhD,0BAAR;EASD;;EACD,QAAQ,IAAK,IAAI,KAAK,CAAT,cAAb;EAEA,KAAK,QAAL,sBACU,KADV,iBAC2B,KAD3B,SACoC,KADpC,wBAEU,KAFV,eAEyB,KAFzB,SAEkC,GAFlC,2CAKM,KALN,kFAOM,QAPN;AAWD,CA/DH","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PadPackedProgram {\n    constructor(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = getCoordsDataType(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const coords = getChannels('rc', rank);\n        const source = getChannels('source', rank);\n        const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n        const innerDims = rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n        const componentSetup = [\n            `${dtype} rc = outputLoc;`, `${coords[rank - 1]} += 1;\n       if(${cLimit}) {\n      `,\n            rank === 1 ? '' : `}\n       rc = outputLoc;\n       ${coords[rank - 2]} += 1;\n       if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {`,\n            rank === 1 ? '' : `  ${coords[rank - 1]} += 1;\n         if(${cLimit}) {`\n        ];\n        const paddingArea = rank === 1 ?\n            'rc < start || rc >= end' :\n            'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n        let mainLoop = '';\n        for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n            mainLoop += `\n        ${componentSetup[i]}\n        if (${paddingArea}) {\n          result[${i}] = float(${constantValue});\n        } else {\n          ${dtype} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n        }\n        mainLoop += (rank === 1 ? `} ` : `}}`);\n        this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pad_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}