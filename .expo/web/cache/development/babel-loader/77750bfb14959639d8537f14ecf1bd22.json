{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from \"./packing_util\";\nimport { getCoordsDataType } from \"./shader_compiler\";\nexport var SlicePackedProgram = function () {\n  function SlicePackedProgram(destSize) {\n    _classCallCheck(this, SlicePackedProgram);\n\n    this.variableNames = ['source'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    var dtype = getCoordsDataType(this.rank);\n    var coords = getChannels('coords', this.rank);\n    var sourceLoc = getChannels('sourceLoc', this.rank);\n    var innerDims = this.rank === 1 ? 'sourceLoc' : \"vec2(\" + sourceLoc.slice(-2).join() + \")\";\n    var getChannel = \"getChannel(getSource(\" + sourceLoc.join() + \"), \" + innerDims + \")\";\n    var upperRow = \"\\n      result.x = \" + getChannel + \";\\n      if (++\" + coords[this.rank - 1] + \" < \" + destSize[this.rank - 1] + \") {\\n        ++\" + sourceLoc[this.rank - 1] + \";\\n        result.y = \" + getChannel + \";\\n        --\" + sourceLoc[this.rank - 1] + \";\\n      }\\n    \";\n    var lowerRow = this.rank === 1 ? '' : \"\\n      --\" + coords[this.rank - 1] + \";\\n      if (++\" + coords[this.rank - 2] + \" < \" + destSize[this.rank - 2] + \") {\\n        ++\" + sourceLoc[this.rank - 2] + \";\\n        result.z = \" + getChannel + \";\\n        if (++\" + coords[this.rank - 1] + \" < \" + destSize[this.rank - 1] + \") {\\n          ++\" + sourceLoc[this.rank - 1] + \";\\n          result.w = \" + getChannel + \";\\n        }\\n      }\\n    \";\n    var sourceLocSetup = this.rank <= 4 ? \"sourceLoc = coords +\\n            \" + dtype + \"(\" + destSize.map(function (_, i) {\n      return \"start[\" + i + \"]\";\n    }).join() + \");\" : destSize.map(function (_, i) {\n      return sourceLoc[i] + \" = \" + coords[i] + \" + start[\" + i + \"];\";\n    }).join('\\n');\n    this.userCode = \"\\n      uniform int start[\" + this.rank + \"];\\n      void main() {\\n        \" + dtype + \" coords = getOutputCoords();\\n        \" + dtype + \" sourceLoc;\\n        \" + sourceLocSetup + \"\\n        vec4 result = vec4(0.);\\n        \" + upperRow + \"\\n        \" + lowerRow + \"\\n        setOutput(result);\\n      }\\n    \";\n  }\n\n  _createClass(SlicePackedProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(start) {\n      var _this = this;\n\n      if (start.length !== this.rank) {\n        throw Error(\"The rank (\" + this.rank + \") of the program must match the \" + (\"length of start (\" + start.length + \")\"));\n      }\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.startLoc == null) {\n          _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n\n          if (_this.startLoc == null) {\n            return;\n          }\n        }\n\n        gpgpu.gl.uniform1iv(_this.startLoc, start);\n      };\n    }\n  }]);\n\n  return SlicePackedProgram;\n}();","map":{"version":3,"sources":["../src/slice_packed_gpu.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        const dtype = getCoordsDataType(this.rank);\n        const coords = getChannels('coords', this.rank);\n        const sourceLoc = getChannels('sourceLoc', this.rank);\n        const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n        const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n        const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n        const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n        const sourceLocSetup = this.rank <= 4 ?\n            `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n            destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n                .join('\\n');\n        this.userCode = `\n      uniform int start[${this.rank}];\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n    }\n    getCustomSetupFunc(start) {\n        if (start.length !== this.rank) {\n            throw Error(`The rank (${this.rank}) of the program must match the ` +\n                `length of start (${start.length})`);\n        }\n        return (gpgpu, webGLProgram) => {\n            if (this.startLoc == null) {\n                this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(this.startLoc, start);\n        };\n    }\n}\n//# sourceMappingURL=slice_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}