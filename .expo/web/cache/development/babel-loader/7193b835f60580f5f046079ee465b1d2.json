{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cumsum } from \"../kernel_names\";\nimport { getAxesPermutation } from \"../ops/axis_util\";\nimport { cumsum } from \"../ops/cumsum\";\nimport { transpose } from \"../ops/transpose\";\nexport var cumsumGradConfig = {\n  kernelName: Cumsum,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    var axis = attrs.axis,\n        exclusive = attrs.exclusive,\n        reverse = attrs.reverse;\n    return {\n      x: function x() {\n        var permutation = getAxesPermutation([axis], _x.rank);\n        var out = cumsum(dy, axis, exclusive, !reverse);\n\n        if (permutation != null) {\n          out = transpose(out, permutation);\n        }\n\n        return out;\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Cumsum_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR;AAEA,SAAQ,kBAAR;AACA,SAAQ,MAAR;AACA,SAAQ,SAAR;AAGA,OAAO,IAAM,gBAAgB,GAAe;EAC1C,UAAU,EAAE,MAD8B;EAE1C,YAAY,EAAE,CAAC,GAAD,CAF4B;EAG1C,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;IAC7D,4BAAY,KAAZ;IAAA,IAAO,EAAP;;IACA,IAAO,IAAP,GAAgD,KAAhD,CAAO,IAAP;IAAA,IAAa,SAAb,GAAgD,KAAhD,CAAa,SAAb;IAAA,IAAwB,OAAxB,GAAgD,KAAhD,CAAwB,OAAxB;IAEA,OAAO;MACL,CAAC,EAAE,aAAK;QACN,IAAM,WAAW,GAAG,kBAAkB,CAAC,CAAC,IAAD,CAAD,EAAS,EAAC,CAAC,IAAX,CAAtC;QAEA,IAAI,GAAG,GAAG,MAAM,CAAC,EAAD,EAAK,IAAL,EAAW,SAAX,EAAsB,CAAC,OAAvB,CAAhB;;QAEA,IAAI,WAAW,IAAI,IAAnB,EAAyB;UACvB,GAAG,GAAG,SAAS,CAAC,GAAD,EAAM,WAAN,CAAf;QACD;;QAED,OAAO,GAAP;MACD;IAXI,CAAP;EAaD;AApByC,CAArC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cumsum } from '../kernel_names';\nimport { getAxesPermutation } from '../ops/axis_util';\nimport { cumsum } from '../ops/cumsum';\nimport { transpose } from '../ops/transpose';\nexport const cumsumGradConfig = {\n    kernelName: Cumsum,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x] = saved;\n        const { axis, exclusive, reverse } = attrs;\n        return {\n            x: () => {\n                const permutation = getAxesPermutation([axis], x.rank);\n                let out = cumsum(dy, axis, exclusive, !reverse);\n                if (permutation != null) {\n                    out = transpose(out, permutation);\n                }\n                return out;\n            }\n        };\n    }\n};\n//# sourceMappingURL=Cumsum_grad.js.map"]},"metadata":{},"sourceType":"module"}