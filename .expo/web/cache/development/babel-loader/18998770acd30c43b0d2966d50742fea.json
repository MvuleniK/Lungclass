{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from \"../kernel_names\";\nimport { cast } from \"../ops/cast\";\nimport { div } from \"../ops/div\";\nimport { neg } from \"../ops/neg\";\nimport { scalar } from \"../ops/scalar\";\nimport { sqrt } from \"../ops/sqrt\";\nimport { square } from \"../ops/square\";\nimport { sub } from \"../ops/sub\";\nexport var acosGradConfig = {\n  kernelName: Acos,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    return {\n      x: function x() {\n        var a = square(cast(_x, 'float32'));\n        var b = sqrt(sub(scalar(1), a));\n        return neg(div(dy, b));\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Acos_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,IAAR;AAEA,SAAQ,IAAR;AACA,SAAQ,GAAR;AACA,SAAQ,GAAR;AACA,SAAQ,MAAR;AACA,SAAQ,IAAR;AACA,SAAQ,MAAR;AACA,SAAQ,GAAR;AAGA,OAAO,IAAM,cAAc,GAAe;EACxC,UAAU,EAAE,IAD4B;EAExC,YAAY,EAAE,CAAC,GAAD,CAF0B;EAGxC,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAAgC;IACxC,4BAAY,KAAZ;IAAA,IAAO,EAAP;;IAEA,OAAO;MACL,CAAC,EAAE,aAAK;QACN,IAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,EAAD,EAAI,SAAJ,CAAL,CAAhB;QACA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,CAAZ,CAAJ,CAAd;QACA,OAAO,GAAG,CAAC,GAAG,CAAC,EAAD,EAAK,CAAL,CAAJ,CAAV;MACD;IALI,CAAP;EAQD;AAduC,CAAnC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { neg } from '../ops/neg';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nexport const acosGradConfig = {\n    kernelName: Acos,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved) => {\n        const [x] = saved;\n        return {\n            x: () => {\n                const a = square(cast(x, 'float32'));\n                const b = sqrt(sub(scalar(1), a));\n                return neg(div(dy, b));\n            }\n        };\n    }\n};\n//# sourceMappingURL=Acos_grad.js.map"]},"metadata":{},"sourceType":"module"}