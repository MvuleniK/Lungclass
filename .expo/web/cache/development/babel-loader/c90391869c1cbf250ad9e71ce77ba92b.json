{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from \"./Reshape\";\nimport { slice } from \"./Slice\";\nexport function unpack(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var value = inputs.value;\n  var axis = attrs.axis;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  var valueRank = value.shape.length;\n  var num = value.shape[axis];\n  var outShape = new Array(valueRank - 1);\n  var outIndex = 0;\n\n  for (var i = 0; i < valueRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n\n  var begin = new Array(valueRank).fill(0);\n  var size = value.shape.slice();\n  size[axis] = 1;\n  var res = new Array(num);\n\n  for (var _i = 0; _i < res.length; _i++) {\n    begin[axis] = _i;\n    var tempRes = slice({\n      inputs: {\n        x: value\n      },\n      backend: backend,\n      attrs: {\n        begin: begin,\n        size: size\n      }\n    });\n    res[_i] = reshape({\n      inputs: {\n        x: tempRes\n      },\n      backend: backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(tempRes);\n  }\n\n  return res;\n}\nexport var unpackConfig = {\n  kernelName: Unpack,\n  backendName: 'cpu',\n  kernelFunc: unpack\n};","map":{"version":3,"sources":["../../src/kernels/Unpack.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAA8C,MAA9C,QAAsF,uBAAtF;AAGA,SAAQ,OAAR;AACA,SAAQ,KAAR;AAEA,OAAM,SAAU,MAAV,CACF,IADE,EACuE;EAE3E,IAAO,MAAP,GAAiC,IAAjC,CAAO,MAAP;EAAA,IAAe,OAAf,GAAiC,IAAjC,CAAe,OAAf;EAAA,IAAwB,KAAxB,GAAiC,IAAjC,CAAwB,KAAxB;EACA,IAAO,KAAP,GAAgB,MAAhB,CAAO,KAAP;EACA,IAAK,IAAL,GAAa,KAAb,CAAK,IAAL;;EAEA,IAAI,IAAI,GAAG,CAAX,EAAc;IACZ,IAAI,IAAI,KAAK,CAAC,KAAN,CAAY,MAApB;EACD;;EAED,IAAM,SAAS,GAAG,KAAK,CAAC,KAAN,CAAY,MAA9B;EAEA,IAAM,GAAG,GAAG,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAZ;EACA,IAAM,QAAQ,GAAa,IAAI,KAAJ,CAAU,SAAS,GAAG,CAAtB,CAA3B;EACA,IAAI,QAAQ,GAAG,CAAf;;EACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;IAClC,IAAI,CAAC,KAAK,IAAV,EAAgB;MACd,QAAQ,CAAC,QAAQ,EAAT,CAAR,GAAuB,KAAK,CAAC,KAAN,CAAY,CAAZ,CAAvB;IACD;EACF;;EAED,IAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,SAAV,EAAqB,IAArB,CAA0B,CAA1B,CAAd;EACA,IAAM,IAAI,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,EAAb;EACA,IAAI,CAAC,IAAD,CAAJ,GAAa,CAAb;EACA,IAAM,GAAG,GAAG,IAAI,KAAJ,CAAU,GAAV,CAAZ;;EACA,KAAK,IAAI,EAAC,GAAG,CAAb,EAAgB,EAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,EAAC,EAAjC,EAAqC;IACnC,KAAK,CAAC,IAAD,CAAL,GAAc,EAAd;IACA,IAAM,OAAO,GAAG,KAAK,CAAC;MAAC,MAAM,EAAE;QAAC,CAAC,EAAE;MAAJ,CAAT;MAAqB,OAAO,EAAP,OAArB;MAA8B,KAAK,EAAE;QAAC,KAAK,EAAL,KAAD;QAAQ,IAAI,EAAJ;MAAR;IAArC,CAAD,CAArB;IACA,GAAG,CAAC,EAAD,CAAH,GAAS,OAAO,CAAC;MAAC,MAAM,EAAE;QAAC,CAAC,EAAE;MAAJ,CAAT;MAAuB,OAAO,EAAP,OAAvB;MAAgC,KAAK,EAAE;QAAC,KAAK,EAAE;MAAR;IAAvC,CAAD,CAAhB;IACA,OAAO,CAAC,6BAAR,CAAsC,OAAtC;EACD;;EAED,OAAO,GAAP;AACD;AAED,OAAO,IAAM,YAAY,GAAiB;EACxC,UAAU,EAAE,MAD4B;EAExC,WAAW,EAAE,KAF2B;EAGxC,UAAU,EAAE;AAH4B,CAAnC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const valueRank = value.shape.length;\n    const num = value.shape[axis];\n    const outShape = new Array(valueRank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < valueRank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = value.shape[i];\n        }\n    }\n    const begin = new Array(valueRank).fill(0);\n    const size = value.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n        begin[axis] = i;\n        const tempRes = slice({ inputs: { x: value }, backend, attrs: { begin, size } });\n        res[i] = reshape({ inputs: { x: tempRes }, backend, attrs: { shape: outShape } });\n        backend.disposeIntermediateTensorInfo(tempRes);\n    }\n    return res;\n}\nexport const unpackConfig = {\n    kernelName: Unpack,\n    backendName: 'cpu',\n    kernelFunc: unpack\n};\n//# sourceMappingURL=Unpack.js.map"]},"metadata":{},"sourceType":"module"}