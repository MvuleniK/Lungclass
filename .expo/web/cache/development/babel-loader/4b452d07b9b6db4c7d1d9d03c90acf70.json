{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nimport { assertNotComplex } from \"../cpu_util\";\nexport function nonMaxSuppressionV4(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold,\n      padToMaxOutputSize = attrs.padToMaxOutputSize;\n  assertNotComplex(boxes, 'NonMaxSuppressionPadded');\n  var boxesVals = backend.data.get(boxes.dataId).values;\n  var scoresVals = backend.data.get(scores.dataId).values;\n\n  var _nonMaxSuppressionV4I = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize),\n      selectedIndices = _nonMaxSuppressionV4I.selectedIndices,\n      validOutputs = _nonMaxSuppressionV4I.validOutputs;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))];\n}\nexport var nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV4\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV4.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAgD,mBAAhD,QAAuJ,uBAAvJ;AAEA,IAAM,uBAAuB,GAAG,YAAY,CAAC,uBAA7C;AAEA,SAAQ,gBAAR;AAEA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAIL;EACC,IAAO,MAAP,GAAiC,IAAjC,CAAO,MAAP;EAAA,IAAe,OAAf,GAAiC,IAAjC,CAAe,OAAf;EAAA,IAAwB,KAAxB,GAAiC,IAAjC,CAAwB,KAAxB;EACA,IAAO,KAAP,GAAwB,MAAxB,CAAO,KAAP;EAAA,IAAc,MAAd,GAAwB,MAAxB,CAAc,MAAd;EACA,IAAO,aAAP,GACI,KADJ,CAAO,aAAP;EAAA,IAAsB,YAAtB,GACI,KADJ,CAAsB,YAAtB;EAAA,IAAoC,cAApC,GACI,KADJ,CAAoC,cAApC;EAAA,IAAoD,kBAApD,GACI,KADJ,CAAoD,kBAApD;EAGA,gBAAgB,CAAC,KAAD,EAAQ,yBAAR,CAAhB;EAEA,IAAM,SAAS,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,KAAK,CAAC,MAAvB,EAA+B,MAAjD;EACA,IAAM,UAAU,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,MAAM,CAAC,MAAxB,EAAgC,MAAnD;;EAEA,4BAAwC,uBAAuB,CAC3D,SAD2D,EAChD,UADgD,EACpC,aADoC,EACrB,YADqB,EACP,cADO,EAE3D,kBAF2D,CAA/D;EAAA,IAAO,eAAP,yBAAO,eAAP;EAAA,IAAwB,YAAxB,yBAAwB,YAAxB;;EAIA,OAAO,CACL,OAAO,CAAC,cAAR,CACI,CAAC,eAAe,CAAC,MAAjB,CADJ,EAC8B,OAD9B,EACuC,IAAI,UAAJ,CAAe,eAAf,CADvC,CADK,EAGL,OAAO,CAAC,cAAR,CAAuB,EAAvB,EAA2B,OAA3B,EAAoC,IAAI,UAAJ,CAAe,CAAC,YAAD,CAAf,CAApC,CAHK,CAAP;AAKD;AACD,OAAO,IAAM,yBAAyB,GAAiB;EACrD,UAAU,EAAE,mBADyC;EAErD,WAAW,EAAE,KAFwC;EAGrD,UAAU,EAAE;AAHyC,CAAhD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV4(args) {\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize } = attrs;\n    assertNotComplex(boxes, 'NonMaxSuppressionPadded');\n    const boxesVals = backend.data.get(boxes.dataId).values;\n    const scoresVals = backend.data.get(scores.dataId).values;\n    const { selectedIndices, validOutputs } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n    ];\n}\nexport const nonMaxSuppressionV4Config = {\n    kernelName: NonMaxSuppressionV4,\n    backendName: 'cpu',\n    kernelFunc: nonMaxSuppressionV4\n};\n//# sourceMappingURL=NonMaxSuppressionV4.js.map"]},"metadata":{},"sourceType":"module"}