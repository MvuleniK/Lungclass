{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from \"../engine\";\nimport { Cast } from \"../kernel_names\";\nimport { convertToTensor } from \"../tensor_util_env\";\nimport * as util from \"../util\";\nimport { op } from \"./operation\";\n\nfunction cast_(x, dtype) {\n  var $x = convertToTensor(x, 'x', 'cast');\n\n  if (!util.isValidDtype(dtype)) {\n    throw new Error(\"Failed to cast to unknown dtype \" + dtype);\n  }\n\n  if (dtype === 'string' && $x.dtype !== 'string' || dtype !== 'string' && $x.dtype === 'string') {\n    throw new Error('Only strings can be casted to strings');\n  }\n\n  var inputs = {\n    x: $x\n  };\n  var attrs = {\n    dtype: dtype\n  };\n  return ENGINE.runKernel(Cast, inputs, attrs);\n}\n\nexport var cast = op({\n  cast_: cast_\n});","map":{"version":3,"sources":["../../src/ops/cast.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR;AACA,SAAQ,IAAR;AAIA,SAAQ,eAAR;AAEA,OAAO,KAAK,IAAZ;AAEA,SAAQ,EAAR;;AAcA,SAAS,KAAT,CAAiC,CAAjC,EAAkD,KAAlD,EAAiE;EAC/D,IAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,MAAT,CAA1B;;EAGA,IAAI,CAAC,IAAI,CAAC,YAAL,CAAkB,KAAlB,CAAL,EAA+B;IAC7B,MAAM,IAAI,KAAJ,sCAA6C,KAA7C,CAAN;EACD;;EACD,IAAI,KAAK,KAAK,QAAV,IAAsB,EAAE,CAAC,KAAH,KAAa,QAAnC,IACA,KAAK,KAAK,QAAV,IAAsB,EAAE,CAAC,KAAH,KAAa,QADvC,EACiD;IAC/C,MAAM,IAAI,KAAJ,CAAU,uCAAV,CAAN;EACD;;EAED,IAAM,MAAM,GAAe;IAAC,CAAC,EAAE;EAAJ,CAA3B;EACA,IAAM,KAAK,GAAc;IAAC,KAAK,EAAL;EAAD,CAAzB;EAEA,OAAO,MAAM,CAAC,SAAP,CACH,IADG,EACG,MADH,EACmC,KADnC,CAAP;AAED;;AAED,OAAO,IAAM,IAAI,GAAG,EAAE,CAAC;EAAC,KAAK,EAAL;AAAD,CAAD,CAAf","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cast } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction cast_(x, dtype) {\n    const $x = convertToTensor(x, 'x', 'cast');\n    // Sanity checks.\n    if (!util.isValidDtype(dtype)) {\n        throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n    }\n    if (dtype === 'string' && $x.dtype !== 'string' ||\n        dtype !== 'string' && $x.dtype === 'string') {\n        throw new Error('Only strings can be casted to strings');\n    }\n    const inputs = { x: $x };\n    const attrs = { dtype };\n    return ENGINE.runKernel(Cast, inputs, attrs);\n}\nexport const cast = op({ cast_ });\n//# sourceMappingURL=cast.js.map"]},"metadata":{},"sourceType":"module"}