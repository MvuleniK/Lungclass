{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from \"./Complex\";\nimport { fill } from \"./Fill\";\nimport { imag } from \"./Imag\";\nimport { real } from \"./Real\";\nexport function zerosLike(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n\n  if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var r = zerosLike({\n      inputs: {\n        x: realPart\n      },\n      backend: backend\n    });\n    var imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend: backend\n    });\n    var result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    return fill({\n      attrs: {\n        shape: x.shape,\n        dtype: x.dtype,\n        value: x.dtype === 'string' ? '' : 0\n      },\n      backend: backend\n    });\n  }\n}\nexport var zerosLikeConfig = {\n  kernelName: ZerosLike,\n  backendName: 'webgl',\n  kernelFunc: zerosLike\n};","map":{"version":3,"sources":["../../src/kernels/ZerosLike.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAA8C,SAA9C,QAA+E,uBAA/E;AAIA,SAAQ,OAAR;AACA,SAAQ,IAAR;AACA,SAAQ,IAAR;AACA,SAAQ,IAAR;AAEA,OAAM,SAAU,SAAV,CACF,IADE,EACwD;EAC5D,IAAO,MAAP,GAA0B,IAA1B,CAAO,MAAP;EAAA,IAAe,OAAf,GAA0B,IAA1B,CAAe,OAAf;EACA,IAAO,CAAP,GAAY,MAAZ,CAAO,CAAP;;EAEA,IAAI,CAAC,CAAC,KAAF,KAAY,WAAhB,EAA6B;IAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC;MAAC,MAAM,EAAE;QAAC,KAAK,EAAE;MAAR,CAAT;MAAqB,OAAO,EAAP;IAArB,CAAD,CAArB;IACA,IAAM,CAAC,GAAG,SAAS,CAAC;MAAC,MAAM,EAAE;QAAC,CAAC,EAAE;MAAJ,CAAT;MAAwB,OAAO,EAAP;IAAxB,CAAD,CAAnB;IACA,IAAM,QAAQ,GAAG,IAAI,CAAC;MAAC,MAAM,EAAE;QAAC,KAAK,EAAE;MAAR,CAAT;MAAqB,OAAO,EAAP;IAArB,CAAD,CAArB;IACA,IAAM,CAAC,GAAG,SAAS,CAAC;MAAC,MAAM,EAAE;QAAC,CAAC,EAAE;MAAJ,CAAT;MAAwB,OAAO,EAAP;IAAxB,CAAD,CAAnB;IAEA,IAAM,MAAM,GAAG,OAAO,CAAC;MAAC,MAAM,EAAE;QAAC,IAAI,EAAE,CAAP;QAAU,IAAI,EAAE;MAAhB,CAAT;MAA6B,OAAO,EAAP;IAA7B,CAAD,CAAtB;IAEA,OAAO,CAAC,6BAAR,CAAsC,QAAtC;IACA,OAAO,CAAC,6BAAR,CAAsC,CAAtC;IACA,OAAO,CAAC,6BAAR,CAAsC,QAAtC;IACA,OAAO,CAAC,6BAAR,CAAsC,CAAtC;IAEA,OAAO,MAAP;EACD,CAdD,MAcO;IACL,OAAO,IAAI,CAAC;MACV,KAAK,EAAE;QACL,KAAK,EAAE,CAAC,CAAC,KADJ;QAEL,KAAK,EAAE,CAAC,CAAC,KAFJ;QAGL,KAAK,EAAE,CAAC,CAAC,KAAF,KAAY,QAAZ,GAAuB,EAAvB,GAA4B;MAH9B,CADG;MAMV,OAAO,EAAP;IANU,CAAD,CAAX;EAQD;AACF;AAED,OAAO,IAAM,eAAe,GAAiB;EAC3C,UAAU,EAAE,SAD+B;EAE3C,WAAW,EAAE,OAF8B;EAG3C,UAAU,EAAE;AAH+B,CAAtC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const r = zerosLike({ inputs: { x: realPart }, backend });\n        const imagPart = imag({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = complex({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        return fill({\n            attrs: {\n                shape: x.shape,\n                dtype: x.dtype,\n                value: x.dtype === 'string' ? '' : 0\n            },\n            backend\n        });\n    }\n}\nexport const zerosLikeConfig = {\n    kernelName: ZerosLike,\n    backendName: 'webgl',\n    kernelFunc: zerosLike\n};\n//# sourceMappingURL=ZerosLike.js.map"]},"metadata":{},"sourceType":"module"}