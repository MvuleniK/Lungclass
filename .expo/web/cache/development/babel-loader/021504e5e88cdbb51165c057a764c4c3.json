{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { getCoordsDataType } from \"./shader_compiler\";\nexport var GatherNDProgram = _createClass(function GatherNDProgram(sliceDim, strides, shape) {\n  _classCallCheck(this, GatherNDProgram);\n\n  this.sliceDim = sliceDim;\n  this.strides = strides;\n  this.variableNames = ['x', 'indices'];\n  this.outputShape = shape;\n  var stridesType = getCoordsDataType(strides.length);\n  var dtype = getCoordsDataType(shape.length);\n  var strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n  this.userCode = \"\\n        \" + stridesType + \" strides = \" + stridesType + \"(\" + this.strides + \");\\n         void main() {\\n          \" + dtype + \" coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          for (int j = 0; j < \" + this.sliceDim + \"; j++) {\\n            int index = round(getIndices(coords[0], j));\\n            flattenIndex += index * \" + strideString + \";\\n          }\\n          setOutput(getX(flattenIndex, coords[1]));\\n        }\\n      \";\n});","map":{"version":3,"sources":["../src/gather_nd_gpu.ts"],"names":[],"mappings":";;AAiBA,SAAQ,iBAAR;AAEA,WAAa,eAAb,gBAIE,yBACY,QADZ,EACsC,OADtC,EACyD,KADzD,EACwE;EAAA;;EAA5D,KAAA,QAAA,GAAA,QAAA;EAA0B,KAAA,OAAA,GAAA,OAAA;EAJtC,KAAA,aAAA,GAAgB,CAAC,GAAD,EAAM,SAAN,CAAhB;EAKE,KAAK,WAAL,GAAmB,KAAnB;EACA,IAAM,WAAW,GAAG,iBAAiB,CAAC,OAAO,CAAC,MAAT,CAArC;EACA,IAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,MAAP,CAA/B;EACA,IAAM,YAAY,GAAG,KAAK,QAAL,GAAgB,CAAhB,GAAoB,YAApB,GAAmC,SAAxD;EACA,KAAK,QAAL,kBACM,WADN,mBAC+B,WAD/B,SAC8C,KAAK,OADnD,8CAGQ,KAHR,qGAK4B,KAAK,QALjC,gHAOkC,YAPlC;AAYD,CAtBH","sourceRoot":"","sourcesContent":["import { getCoordsDataType } from './shader_compiler';\nexport class GatherNDProgram {\n    constructor(sliceDim, strides, shape) {\n        this.sliceDim = sliceDim;\n        this.strides = strides;\n        this.variableNames = ['x', 'indices'];\n        this.outputShape = shape;\n        const stridesType = getCoordsDataType(strides.length);\n        const dtype = getCoordsDataType(shape.length);\n        const strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n        this.userCode = `\n        ${stridesType} strides = ${stridesType}(${this.strides});\n         void main() {\n          ${dtype} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${strideString};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `;\n    }\n}\n//# sourceMappingURL=gather_nd_gpu.js.map"]},"metadata":{},"sourceType":"module"}