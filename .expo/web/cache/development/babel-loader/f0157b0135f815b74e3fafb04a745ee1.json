{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv2DBackpropInput } from \"../kernel_names\";\nimport { conv2d } from \"../ops/conv2d\";\nimport { conv2DBackpropFilter } from \"../ops/conv2d_backprop_filter\";\nexport var conv2DBackpropInputGradConfig = {\n  kernelName: Conv2DBackpropInput,\n  inputsToSave: ['dy', 'filter'],\n  gradFunc: function gradFunc(ddx, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        dy = _saved[0],\n        _filter = _saved[1];\n\n    var strides = attrs.strides,\n        pad = attrs.pad,\n        dataFormat = attrs.dataFormat,\n        dimRoundingMode = attrs.dimRoundingMode;\n    return {\n      dy: function dy() {\n        return conv2d(ddx, _filter, strides, pad, dataFormat, 1, dimRoundingMode);\n      },\n      filter: function filter() {\n        return conv2DBackpropFilter(ddx, dy, _filter.shape, strides, pad, dataFormat, dimRoundingMode);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Conv2DBackpropInput_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,mBAAR;AAEA,SAAQ,MAAR;AACA,SAAQ,oBAAR;AAGA,OAAO,IAAM,6BAA6B,GAAe;EACvD,UAAU,EAAE,mBAD2C;EAEvD,YAAY,EAAE,CAAC,IAAD,EAAO,QAAP,CAFyC;EAGvD,QAAQ,EAAE,kBAAC,GAAD,EAAgB,KAAhB,EAAiC,KAAjC,EAAwD;IAChE,4BAAqB,KAArB;IAAA,IAAO,EAAP;IAAA,IAAW,OAAX;;IAEA,IAAO,OAAP,GACI,KADJ,CAAO,OAAP;IAAA,IAAgB,GAAhB,GACI,KADJ,CAAgB,GAAhB;IAAA,IAAqB,UAArB,GACI,KADJ,CAAqB,UAArB;IAAA,IAAiC,eAAjC,GACI,KADJ,CAAiC,eAAjC;IAGA,OAAO;MACL,EAAE,EAAE;QAAA,OAAM,MAAM,CACZ,GADY,EACP,OADO,EACC,OADD,EACU,GADV,EACe,UADf,EAC2B,CAD3B,EAEZ,eAFY,CAAZ;MAAA,CADC;MAIL,MAAM,EAAE;QAAA,OAAM,oBAAoB,CAC9B,GAD8B,EACzB,EADyB,EACrB,OAAM,CAAC,KADc,EACP,OADO,EACE,GADF,EACO,UADP,EACmB,eADnB,CAA1B;MAAA;IAJH,CAAP;EAOD;AAhBsD,CAAlD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv2DBackpropInput } from '../kernel_names';\nimport { conv2d } from '../ops/conv2d';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nexport const conv2DBackpropInputGradConfig = {\n    kernelName: Conv2DBackpropInput,\n    inputsToSave: ['dy', 'filter'],\n    gradFunc: (ddx, saved, attrs) => {\n        const [dy, filter] = saved;\n        const { strides, pad, dataFormat, dimRoundingMode } = attrs;\n        return {\n            dy: () => conv2d(ddx, filter, strides, pad, dataFormat, 1 /* dilations */, dimRoundingMode),\n            filter: () => conv2DBackpropFilter(ddx, dy, filter.shape, strides, pad, dataFormat, dimRoundingMode)\n        };\n    }\n};\n//# sourceMappingURL=Conv2DBackpropInput_grad.js.map"]},"metadata":{},"sourceType":"module"}