{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from \"../engine\";\nimport { Unpack } from \"../kernel_names\";\nimport { convertToTensor } from \"../tensor_util_env\";\nimport * as util from \"../util\";\nimport { op } from \"./operation\";\n\nfunction unstack_(x) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var $x = convertToTensor(x, 'x', 'unstack', 'string_or_numeric');\n  util.assert(axis >= -$x.shape.length && axis < $x.shape.length, function () {\n    return \"Axis = \" + axis + \" is not in [-\" + $x.shape.length + \", \" + $x.shape.length + \")\";\n  });\n  var inputs = {\n    value: $x\n  };\n  var attrs = {\n    axis: axis\n  };\n  return ENGINE.runKernel(Unpack, inputs, attrs);\n}\n\nexport var unstack = op({\n  unstack_: unstack_\n});","map":{"version":3,"sources":["../../src/ops/unstack.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR;AACA,SAAQ,MAAR;AAIA,SAAQ,eAAR;AAEA,OAAO,KAAK,IAAZ;AAEA,SAAQ,EAAR;;AAgBA,SAAS,QAAT,CAAkB,CAAlB,EAAgD;EAAA,IAAR,IAAQ,uEAAD,CAAC;EAC9C,IAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,SAAT,EAAoB,mBAApB,CAA1B;EACA,IAAI,CAAC,MAAL,CACI,IAAI,IAAI,CAAC,EAAE,CAAC,KAAH,CAAS,MAAlB,IAA4B,IAAI,GAAG,EAAE,CAAC,KAAH,CAAS,MADhD,EAEI;IAAA,mBACc,IADd,qBACkC,EAAE,CAAC,KAAH,CAAS,MAD3C,UACsD,EAAE,CAAC,KAAH,CAAS,MAD/D;EAAA,CAFJ;EAKA,IAAM,MAAM,GAAiB;IAAC,KAAK,EAAE;EAAR,CAA7B;EACA,IAAM,KAAK,GAAgB;IAAC,IAAI,EAAJ;EAAD,CAA3B;EAEA,OAAO,MAAM,CAAC,SAAP,CACH,MADG,EACK,MADL,EACqC,KADrC,CAAP;AAED;;AAED,OAAO,IAAM,OAAO,GAAG,EAAE,CAAC;EAAC,QAAQ,EAAR;AAAD,CAAD,CAAlB","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Unpack } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction unstack_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'unstack', 'string_or_numeric');\n    util.assert(axis >= -$x.shape.length && axis < $x.shape.length, () => `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n    const inputs = { value: $x };\n    const attrs = { axis };\n    return ENGINE.runKernel(Unpack, inputs, attrs);\n}\nexport const unstack = op({ unstack_ });\n//# sourceMappingURL=unstack.js.map"]},"metadata":{},"sourceType":"module"}