{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from \"./shader_compiler\";\nexport var GatherProgram = _createClass(function GatherProgram(aShape, outputShape) {\n  _classCallCheck(this, GatherProgram);\n\n  this.variableNames = ['A', 'indices'];\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n  var dtype = getCoordsDataType(this.rank);\n  var sourceCoords = getSourceCoords(aShape, 2);\n  this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n});\n\nfunction getSourceCoords(aShape, axis) {\n  var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n  var sourceCoords = [];\n\n  for (var i = 0; i < aShape.length; i++) {\n    if (i === 2) {\n      sourceCoords.push('int(getIndices(resRC.x, resRC.z))');\n    } else {\n      sourceCoords.push(\"\" + currentCoords[i]);\n    }\n  }\n\n  return sourceCoords.join();\n}","map":{"version":3,"sources":["../src/gather_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,iBAAR;AAEA,WAAa,aAAb,gBAME,uBAAY,MAAZ,EAA8B,WAA9B,EAAmD;EAAA;;EALnD,KAAA,aAAA,GAAgB,CAAC,GAAD,EAAM,SAAN,CAAhB;EAME,KAAK,WAAL,GAAmB,WAAnB;EACA,KAAK,IAAL,GAAY,WAAW,CAAC,MAAxB;EACA,IAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,IAAN,CAA/B;EACA,IAAM,YAAY,GAAG,eAAe,CAAC,MAAD,EAAS,CAAT,CAApC;EAEA,KAAK,QAAL,uCAEM,KAFN,4DAGqB,YAHrB;AAMD,CAlBH;;AAsBA,SAAS,eAAT,CAAyB,MAAzB,EAA2C,IAA3C,EAAuD;EACrD,IAAM,aAAa,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAtB;EAEA,IAAM,YAAY,GAAG,EAArB;;EACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;IACtC,IAAI,CAAC,KAAK,CAAV,EAAa;MACX,YAAY,CAAC,IAAb,CAAkB,mCAAlB;IACD,CAFD,MAEO;MACL,YAAY,CAAC,IAAb,MAAqB,aAAa,CAAC,CAAD,CAAlC;IACD;EACF;;EACD,OAAO,YAAY,CAAC,IAAb,EAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class GatherProgram {\n    constructor(aShape, outputShape) {\n        this.variableNames = ['A', 'indices'];\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = getCoordsDataType(this.rank);\n        const sourceCoords = getSourceCoords(aShape, 2);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n    }\n}\n// The input and output are always flattened into rank 4 tensors.\nfunction getSourceCoords(aShape, axis) {\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    const sourceCoords = [];\n    for (let i = 0; i < aShape.length; i++) {\n        if (i === 2) {\n            sourceCoords.push('int(getIndices(resRC.x, resRC.z))');\n        }\n        else {\n            sourceCoords.push(`${currentCoords[i]}`);\n        }\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=gather_gpu.js.map"]},"metadata":{},"sourceType":"module"}