{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPoolWithArgmax } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { maxPoolWithArgmaxImpl } from \"./MaxPoolWithArgmax_impl\";\nexport var maxPoolWithArgmaxConfig = {\n  kernelName: MaxPoolWithArgmax,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var x = inputs.x;\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        includeBatchInIndex = attrs.includeBatchInIndex;\n    var webglBackend = backend;\n    util.assert(x.shape.length === 4, function () {\n      return \"Error in maxPool: input must be rank 4 but got rank \" + x.shape.length + \".\";\n    });\n    var dilations = [1, 1];\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n      return 'Error in maxPool: Either strides or dilations must be 1. ' + (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\");\n    });\n    var convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad);\n\n    var _maxPoolWithArgmaxImp = maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, webglBackend),\n        _maxPoolWithArgmaxImp2 = _slicedToArray(_maxPoolWithArgmaxImp, 2),\n        result = _maxPoolWithArgmaxImp2[0],\n        indexes = _maxPoolWithArgmaxImp2[1];\n\n    return [result, indexes];\n  }\n};","map":{"version":3,"sources":["../../src/kernels/MaxPoolWithArgmax.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,iBAAR,QAAiF,uBAAjF;AACA,SAAQ,YAAR,EAAoC,IAApC,QAA+C,uBAA/C;AAIA,SAAQ,qBAAR;AAEA,OAAO,IAAM,uBAAuB,GAAiB;EACnD,UAAU,EAAE,iBADuC;EAEnD,WAAW,EAAE,OAFsC;EAGnD,UAAU,EAAE,0BAA6B;IAAA,IAA3B,MAA2B,QAA3B,MAA2B;IAAA,IAAnB,KAAmB,QAAnB,KAAmB;IAAA,IAAZ,OAAY,QAAZ,OAAY;IACvC,IAAO,CAAP,GAAY,MAAZ,CAAO,CAAP;IACA,IAAO,UAAP,GACI,KADJ,CAAO,UAAP;IAAA,IAAmB,OAAnB,GACI,KADJ,CAAmB,OAAnB;IAAA,IAA4B,GAA5B,GACI,KADJ,CAA4B,GAA5B;IAAA,IAAiC,mBAAjC,GACI,KADJ,CAAiC,mBAAjC;IAEA,IAAM,YAAY,GAAG,OAArB;IAEA,IAAI,CAAC,MAAL,CACI,CAAC,CAAC,KAAF,CAAQ,MAAR,KAAmB,CADvB,EAEI;MAAA,gEACI,CAAC,CAAC,KAAF,CAAQ,MADZ;IAAA,CAFJ;IAIA,IAAM,SAAS,GAAqB,CAAC,CAAD,EAAI,CAAJ,CAApC;IACA,IAAI,CAAC,MAAL,CACI,YAAY,CAAC,8BAAb,CAA4C,OAA5C,EAAqD,SAArD,CADJ,EAEI;MAAA,OAAM,gFACa,OADb,wBACuC,SADvC,OAAN;IAAA,CAFJ;IAKA,IAAM,QAAQ,GAAG,YAAY,CAAC,iBAAb,CACb,CAAC,CAAC,KADW,EACgC,UADhC,EAC4C,OAD5C,EAEb,SAFa,EAEF,GAFE,CAAjB;;IAIA,4BACI,qBAAqB,CAAC,CAAD,EAAI,mBAAJ,EAAyB,QAAzB,EAAmC,YAAnC,CADzB;IAAA;IAAA,IAAO,MAAP;IAAA,IAAe,OAAf;;IAEA,OAAO,CAAC,MAAD,EAAS,OAAT,CAAP;EACD;AA1BkD,CAA9C","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPoolWithArgmax } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { maxPoolWithArgmaxImpl } from './MaxPoolWithArgmax_impl';\nexport const maxPoolWithArgmaxConfig = {\n    kernelName: MaxPoolWithArgmax,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        const { filterSize, strides, pad, includeBatchInIndex } = attrs;\n        const webglBackend = backend;\n        util.assert(x.shape.length === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x.shape.length}.`);\n        const dilations = [1, 1];\n        util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n            `Got strides ${strides} and dilations '${dilations}'`);\n        const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad);\n        const [result, indexes] = maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, webglBackend);\n        return [result, indexes];\n    }\n};\n//# sourceMappingURL=MaxPoolWithArgmax.js.map"]},"metadata":{},"sourceType":"module"}