{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var json = [{\n  'tfOpName': 'AvgPool',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'MaxPool',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': [],\n    'notSupported': true\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'MaxPoolWithArgmax',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'include_batch_in_index',\n    'name': 'includeBatchInIndex',\n    'type': 'bool'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'AvgPool3D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'MaxPool3D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'ksize',\n    'name': 'kernelSize',\n    'type': 'number[]'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Conv1D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'stride',\n    'name': 'stride',\n    'type': 'number'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NWC'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'dilation',\n    'name': 'dilation',\n    'type': 'number',\n    'defaultValue': 1\n  }]\n}, {\n  'tfOpName': 'Conv2D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'useCudnnOnGpu',\n    'name': 'useCudnnOnGpu',\n    'type': 'bool'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': '_FusedConv2D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    end: 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'num_args',\n    'name': 'numArgs',\n    'type': 'number'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'use_cudnn_on_gpu',\n    'name': 'useCudnnOnGpu',\n    'type': 'bool',\n    'defaultValue': true\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]',\n    'defaultValue': [1, 1, 1, 1]\n  }, {\n    'tfName': 'fused_ops',\n    'name': 'fusedOps',\n    'type': 'string[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'epsilon',\n    'name': 'epsilon',\n    'type': 'number',\n    'defaultValue': 0.0001\n  }, {\n    'tfName': 'leakyrelu_alpha',\n    'name': 'leakyreluAlpha',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'Conv2DBackpropInput',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 2,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }, {\n    'start': 0,\n    'name': 'outputShape',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'notSupported': true\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'DepthwiseConv2d',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'input',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'DepthwiseConv2dNative',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'input',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'FusedDepthwiseConv2dNative',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    end: 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'num_args',\n    'name': 'numArgs',\n    'type': 'number'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]',\n    'defaultValue': [1, 1, 1, 1]\n  }, {\n    'tfName': 'fused_ops',\n    'name': 'fusedOps',\n    'type': 'string[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'explicit_paddings',\n    'name': 'explicitPaddings',\n    'type': 'number[]',\n    'defaultValue': []\n  }]\n}, {\n  'tfOpName': 'Conv3D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }, {\n    'tfName': 'data_format',\n    'name': 'dataFormat',\n    'type': 'string',\n    'defaultValue': 'NHWC'\n  }, {\n    'tfName': 'dilations',\n    'name': 'dilations',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'Dilation2D',\n  'category': 'convolution',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'filter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'strides',\n    'name': 'strides',\n    'type': 'number[]'\n  }, {\n    'tfName': 'rates',\n    'name': 'dilations',\n    'type': 'number[]'\n  }, {\n    'tfName': 'padding',\n    'name': 'pad',\n    'type': 'string'\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/convolution.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'AvgPool',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' }, {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': [],\n                'notSupported': true\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPoolWithArgmax',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' }, {\n                'tfName': 'include_batch_in_index',\n                'name': 'includeBatchInIndex',\n                'type': 'bool'\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'AvgPool3D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool3D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Conv1D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'stride', 'name': 'stride', 'type': 'number' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NWC'\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'dilation',\n                'name': 'dilation',\n                'type': 'number',\n                'defaultValue': 1\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\n            { 'tfName': 'useCudnnOnGpu', 'name': 'useCudnnOnGpu', 'type': 'bool' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': '_FusedConv2D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n            { 'start': 2, end: 0, 'name': 'args', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'num_args', 'name': 'numArgs', 'type': 'number' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'use_cudnn_on_gpu',\n                'name': 'useCudnnOnGpu',\n                'type': 'bool',\n                'defaultValue': true\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [1, 1, 1, 1]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'leakyrelu_alpha',\n                'name': 'leakyreluAlpha',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2DBackpropInput',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 2, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n            { 'start': 0, 'name': 'outputShape', 'type': 'number[]' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2d',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'input', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'input', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'FusedDepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n            { 'start': 2, end: 0, 'name': 'args', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'num_args', 'name': 'numArgs', 'type': 'number' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [1, 1, 1, 1]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv3D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ],\n    },\n    {\n        'tfOpName': 'Dilation2D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'rates', 'name': 'dilations', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }\n        ]\n    }\n];\n//# sourceMappingURL=convolution.js.map"]},"metadata":{},"sourceType":"module"}