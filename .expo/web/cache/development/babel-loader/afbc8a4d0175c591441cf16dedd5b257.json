{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { Conv2DDerFilterProgram } from \"../conv_backprop_gpu\";\nexport function conv2DBackpropFilter(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x,\n      dy = inputs.dy;\n  var strides = attrs.strides,\n      pad = attrs.pad,\n      dataFormat = attrs.dataFormat,\n      dimRoundingMode = attrs.dimRoundingMode,\n      filterShape = attrs.filterShape;\n  var $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  var convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1, pad, dimRoundingMode, false, $dataFormat);\n  var program = new Conv2DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport var conv2DBackpropFilterConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'webgl',\n  kernelFunc: conv2DBackpropFilter\n};","map":{"version":3,"sources":["../../src/kernels/Conv2DBackpropFilter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,oBAAtB,QAAkI,uBAAlI;AAGA,SAAQ,sBAAR;AAEA,OAAM,SAAU,oBAAV,CAA+B,IAA/B,EAIL;EACC,IAAO,MAAP,GAAiC,IAAjC,CAAO,MAAP;EAAA,IAAe,OAAf,GAAiC,IAAjC,CAAe,OAAf;EAAA,IAAwB,KAAxB,GAAiC,IAAjC,CAAwB,KAAxB;EACA,IAAO,CAAP,GAAgB,MAAhB,CAAO,CAAP;EAAA,IAAU,EAAV,GAAgB,MAAhB,CAAU,EAAV;EACA,IAAO,OAAP,GAAiE,KAAjE,CAAO,OAAP;EAAA,IAAgB,GAAhB,GAAiE,KAAjE,CAAgB,GAAhB;EAAA,IAAqB,UAArB,GAAiE,KAAjE,CAAqB,UAArB;EAAA,IAAiC,eAAjC,GAAiE,KAAjE,CAAiC,eAAjC;EAAA,IAAkD,WAAlD,GAAiE,KAAjE,CAAkD,WAAlD;EAEA,IAAM,WAAW,GAAG,YAAY,CAAC,uBAAb,CAAqC,UAArC,CAApB;EACA,IAAM,QAAQ,GAAG,YAAY,CAAC,iBAAb,CACb,CAAC,CAAC,KADW,EACgC,WADhC,EAC6C,OAD7C,EAEb,CAFa,EAEM,GAFN,EAEW,eAFX,EAE4B,KAF5B,EAGb,WAHa,CAAjB;EAKA,IAAM,OAAO,GAAG,IAAI,sBAAJ,CAA2B,QAA3B,CAAhB;EACA,OAAO,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,CAAC,CAAD,EAAI,EAAJ,CAAjC,EAA0C,SAA1C,CAAP;AACD;AAED,OAAO,IAAM,0BAA0B,GAAiB;EACtD,UAAU,EAAE,oBAD0C;EAEtD,WAAW,EAAE,OAFyC;EAGtD,UAAU,EAAE;AAH0C,CAAjD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { Conv2DDerFilterProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, dataFormat, dimRoundingMode, filterShape } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    const program = new Conv2DDerFilterProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport const conv2DBackpropFilterConfig = {\n    kernelName: Conv2DBackpropFilter,\n    backendName: 'webgl',\n    kernelFunc: conv2DBackpropFilter,\n};\n//# sourceMappingURL=Conv2DBackpropFilter.js.map"]},"metadata":{},"sourceType":"module"}