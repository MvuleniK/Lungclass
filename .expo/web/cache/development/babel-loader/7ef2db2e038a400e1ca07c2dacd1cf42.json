{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D } from \"../kernel_names\";\nimport { avgPool3dGrad } from \"../ops/avg_pool_3d_grad\";\nexport var avgPool3DGradConfig = {\n  kernelName: AvgPool3D,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        dilations = attrs.dilations,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode;\n    var $dilations = dilations == null ? [1, 1, 1] : dilations;\n    return {\n      x: function x() {\n        return avgPool3dGrad(dy, _x, filterSize, strides, $dilations, pad, dimRoundingMode);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/AvgPool3D_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,SAAR;AAEA,SAAQ,aAAR;AAGA,OAAO,IAAM,mBAAmB,GAAe;EAC7C,UAAU,EAAE,SADiC;EAE7C,YAAY,EAAE,CAAC,GAAD,CAF+B;EAG7C,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;IAC7D,4BAAY,KAAZ;IAAA,IAAO,EAAP;;IACA,IAAO,UAAP,GACI,KADJ,CAAO,UAAP;IAAA,IAAmB,OAAnB,GACI,KADJ,CAAmB,OAAnB;IAAA,IAA4B,SAA5B,GACI,KADJ,CAA4B,SAA5B;IAAA,IAAuC,GAAvC,GACI,KADJ,CAAuC,GAAvC;IAAA,IAA4C,eAA5C,GACI,KADJ,CAA4C,eAA5C;IAGA,IAAM,UAAU,GACZ,SAAS,IAAI,IAAb,GAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB,GAA4D,SADhE;IAGA,OAAO;MACL,CAAC,EAAE;QAAA,OAAM,aAAa,CAClB,EADkB,EACF,EADE,EACC,UADD,EACa,OADb,EACsB,UADtB,EACkC,GADlC,EAElB,eAFkB,CAAnB;MAAA;IADE,CAAP;EAKD;AAhB4C,CAAxC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D } from '../kernel_names';\nimport { avgPool3dGrad } from '../ops/avg_pool_3d_grad';\nexport const avgPool3DGradConfig = {\n    kernelName: AvgPool3D,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x] = saved;\n        const { filterSize, strides, dilations, pad, dimRoundingMode } = attrs;\n        const $dilations = dilations == null ? [1, 1, 1] : dilations;\n        return {\n            x: () => avgPool3dGrad(dy, x, filterSize, strides, $dilations, pad, dimRoundingMode)\n        };\n    }\n};\n//# sourceMappingURL=AvgPool3D_grad.js.map"]},"metadata":{},"sourceType":"module"}