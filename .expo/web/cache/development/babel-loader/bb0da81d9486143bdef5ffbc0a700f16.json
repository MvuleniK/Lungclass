{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { FileChunkIterator } from \"./file_chunk_iterator\";\nexport function urlChunkIterator(url) {\n  var options,\n      urlString,\n      requestInit,\n      response,\n      uint8Array,\n      _args = arguments;\n  return _regeneratorRuntime.async(function urlChunkIterator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n          if (typeof url === 'string') {\n            urlString = url;\n          } else {\n            urlString = url.url;\n            requestInit = getRequestInitFromRequest(url);\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(util.fetch(urlString, requestInit));\n\n        case 4:\n          response = _context.sent;\n\n          if (!response.ok) {\n            _context.next = 14;\n            break;\n          }\n\n          _context.t0 = Uint8Array;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(response.arrayBuffer());\n\n        case 9:\n          _context.t1 = _context.sent;\n          uint8Array = new _context.t0(_context.t1);\n          return _context.abrupt(\"return\", new FileChunkIterator(uint8Array, options));\n\n        case 14:\n          throw new Error(response.statusText);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar getRequestInitFromRequest = function getRequestInitFromRequest(request) {\n  var init = {\n    method: request.method,\n    headers: request.headers,\n    body: request.body,\n    mode: request.mode,\n    credentials: request.credentials,\n    cache: request.cache,\n    redirect: request.redirect,\n    referrer: request.referrer,\n    integrity: request.integrity\n  };\n  return init;\n};","map":{"version":3,"sources":["../../src/iterators/url_chunk_iterator.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBG;AAEH,SAAQ,IAAR,QAAmB,uBAAnB;AACA,SAAQ,iBAAR;AASA,OAAO,SAAe,gBAAf,CACH,GADG;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UACe,OADf,2DACmD,EADnD;;UAIL,IAAK,OAAO,GAAR,KAAiB,QAArB,EAA+B;YAC7B,SAAS,GAAG,GAAZ;UACD,CAFD,MAEO;YACL,SAAS,GAAI,GAAe,CAAC,GAA7B;YACA,WAAW,GAAG,yBAAyB,CAAC,GAAD,CAAvC;UACD;;UATI;UAAA,iCAUkB,IAAI,CAAC,KAAL,CAAW,SAAX,EAAsB,WAAtB,CAVlB;;QAAA;UAUC,QAVD;;UAAA,KAWD,QAAQ,CAAC,EAXR;YAAA;YAAA;UAAA;;UAAA,cAYoB,UAZpB;UAAA;UAAA,iCAYqC,QAAQ,CAAC,WAAT,EAZrC;;QAAA;UAAA;UAYG,UAZH;UAAA,iCAaI,IAAI,iBAAJ,CAAsB,UAAtB,EAAkC,OAAlC,CAbJ;;QAAA;UAAA,MAeG,IAAI,KAAJ,CAAU,QAAQ,CAAC,UAAnB,CAfH;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAoBP,IAAM,yBAAyB,GAAG,SAA5B,yBAA4B,CAAC,OAAD,EAAqB;EACrD,IAAM,IAAI,GAAG;IACX,MAAM,EAAE,OAAO,CAAC,MADL;IAEX,OAAO,EAAE,OAAO,CAAC,OAFN;IAGX,IAAI,EAAE,OAAO,CAAC,IAHH;IAIX,IAAI,EAAE,OAAO,CAAC,IAJH;IAKX,WAAW,EAAE,OAAO,CAAC,WALV;IAMX,KAAK,EAAE,OAAO,CAAC,KANJ;IAOX,QAAQ,EAAE,OAAO,CAAC,QAPP;IAQX,QAAQ,EAAE,OAAO,CAAC,QARP;IASX,SAAS,EAAE,OAAO,CAAC;EATR,CAAb;EAWA,OAAO,IAAP;AACD,CAbD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { FileChunkIterator } from './file_chunk_iterator';\n/**\n * Provide a stream of chunks from a URL.\n *\n * Note this class first downloads the entire file into memory before providing\n * the first element from the stream.  This is because the Fetch API does not\n * yet reliably provide a reader stream for the response body.\n */\nexport async function urlChunkIterator(url, options = {}) {\n    let urlString;\n    let requestInit;\n    if ((typeof url) === 'string') {\n        urlString = url;\n    }\n    else {\n        urlString = url.url;\n        requestInit = getRequestInitFromRequest(url);\n    }\n    const response = await util.fetch(urlString, requestInit);\n    if (response.ok) {\n        const uint8Array = new Uint8Array(await response.arrayBuffer());\n        return new FileChunkIterator(uint8Array, options);\n    }\n    else {\n        throw new Error(response.statusText);\n    }\n}\n// Generate RequestInit from Request to match tf.util.fetch signature.\nconst getRequestInitFromRequest = (request) => {\n    const init = {\n        method: request.method,\n        headers: request.headers,\n        body: request.body,\n        mode: request.mode,\n        credentials: request.credentials,\n        cache: request.cache,\n        redirect: request.redirect,\n        referrer: request.referrer,\n        integrity: request.integrity,\n    };\n    return init;\n};\n//# sourceMappingURL=url_chunk_iterator.js.map"]},"metadata":{},"sourceType":"module"}