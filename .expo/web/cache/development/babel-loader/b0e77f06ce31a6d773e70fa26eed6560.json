{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from \"../engine\";\nimport { LogicalOr } from \"../kernel_names\";\nimport { convertToTensor } from \"../tensor_util_env\";\nimport { assertAndGetBroadcastShape } from \"./broadcast_util\";\nimport { op } from \"./operation\";\n\nfunction logicalOr_(a, b) {\n  var $a = convertToTensor(a, 'a', 'logicalOr', 'bool');\n  var $b = convertToTensor(b, 'b', 'logicalOr', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  var inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(LogicalOr, inputs);\n}\n\nexport var logicalOr = op({\n  logicalOr_: logicalOr_\n});","map":{"version":3,"sources":["../../src/ops/logical_or.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR;AACA,SAAQ,SAAR;AAGA,SAAQ,eAAR;AAEA,SAAQ,0BAAR;AACA,SAAQ,EAAR;;AAgBA,SAAS,UAAT,CACI,CADJ,EAC0B,CAD1B,EAC8C;EAC5C,IAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,WAAT,EAAsB,MAAtB,CAA1B;EACA,IAAM,EAAE,GAAG,eAAe,CAAC,CAAD,EAAI,GAAJ,EAAS,WAAT,EAAsB,MAAtB,CAA1B;EACA,0BAA0B,CAAC,EAAE,CAAC,KAAJ,EAAW,EAAE,CAAC,KAAd,CAA1B;EAEA,IAAM,MAAM,GAAoB;IAAC,CAAC,EAAE,EAAJ;IAAQ,CAAC,EAAE;EAAX,CAAhC;EACA,OAAO,MAAM,CAAC,SAAP,CAAiB,SAAjB,EAA4B,MAA5B,CAAP;AACD;;AACD,OAAO,IAAM,SAAS,GAAG,EAAE,CAAC;EAAC,UAAU,EAAV;AAAD,CAAD,CAApB","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LogicalOr } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalOr_(a, b) {\n    const $a = convertToTensor(a, 'a', 'logicalOr', 'bool');\n    const $b = convertToTensor(b, 'b', 'logicalOr', 'bool');\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(LogicalOr, inputs);\n}\nexport const logicalOr = op({ logicalOr_ });\n//# sourceMappingURL=logical_or.js.map"]},"metadata":{},"sourceType":"module"}